

================================================================
== Vivado HLS Report for 'sinGen_sinf_or_cosf'
================================================================
* Date:           Mon Sep 03 14:23:42 2018

* Version:        2015.4 (Build 1412921 on Wed Nov 18 09:58:55 AM 2015)
* Project:        SineGenerator
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.47|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   77|   81|   77|   81|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 17
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
* FSM state operations: 

 <State 1>: 6.82ns
ST_1: t_in_read [1/1] 1.04ns
_ifconv:1  %t_in_read = call float @_ssdm_op_Read.ap_auto.float(float %t_in) nounwind

ST_1: p_Val2_28 [1/1] 0.00ns
_ifconv:5  %p_Val2_28 = bitcast float %t_in_read to i32

ST_1: p_Result_s [1/1] 0.00ns
_ifconv:6  %p_Result_s = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_28, i32 31)

ST_1: loc_V [1/1] 0.00ns
_ifconv:7  %loc_V = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %p_Val2_28, i32 23, i32 30)

ST_1: loc_V_1 [1/1] 0.00ns
_ifconv:8  %loc_V_1 = trunc i32 %p_Val2_28 to i23

ST_1: closepath [1/1] 2.00ns
_ifconv:9  %closepath = icmp ult i8 %loc_V, 126

ST_1: p_op_i [1/1] 1.72ns
_ifconv:14  %p_op_i = add i8 -62, %loc_V

ST_1: addr_V [1/1] 1.37ns
_ifconv:15  %addr_V = select i1 %closepath, i8 63, i8 %p_op_i

ST_1: tmp_2 [1/1] 0.00ns
_ifconv:16  %tmp_2 = call i4 @_ssdm_op_PartSelect.i4.i8.i32.i32(i8 %addr_V, i32 4, i32 7)

ST_1: tmp_5_i_i [1/1] 0.00ns
_ifconv:17  %tmp_5_i_i = zext i4 %tmp_2 to i64

ST_1: hls_ref_4oPi_table_100_V_addr [1/1] 0.00ns
_ifconv:18  %hls_ref_4oPi_table_100_V_addr = getelementptr [13 x i100]* @hls_ref_4oPi_table_100_V, i64 0, i64 %tmp_5_i_i

ST_1: table_100_V [2/2] 2.42ns
_ifconv:19  %table_100_V = load i100* %hls_ref_4oPi_table_100_V_addr, align 16

ST_1: tmp_19 [1/1] 0.00ns
_ifconv:20  %tmp_19 = trunc i8 %addr_V to i4


 <State 2>: 6.04ns
ST_2: p_Result_13 [1/1] 0.00ns
_ifconv:12  %p_Result_13 = call i24 @_ssdm_op_BitConcatenate.i24.i1.i23(i1 true, i23 %loc_V_1) nounwind

ST_2: table_100_V [1/2] 2.42ns
_ifconv:19  %table_100_V = load i100* %hls_ref_4oPi_table_100_V_addr, align 16

ST_2: tmp_7_i_i [1/1] 0.00ns
_ifconv:21  %tmp_7_i_i = zext i4 %tmp_19 to i100

ST_2: r_V_3 [1/1] 3.62ns
_ifconv:22  %r_V_3 = shl i100 %table_100_V, %tmp_7_i_i

ST_2: Med_V [1/1] 0.00ns
_ifconv:23  %Med_V = call i71 @_ssdm_op_PartSelect.i71.i100.i32.i32(i100 %r_V_3, i32 29, i32 99) nounwind

ST_2: p_Val2_13 [2/2] 0.00ns
_ifconv:24  %p_Val2_13 = call fastcc i95 @"sinGen_big_mult_v3small<71, 24, 17>"(i71 %Med_V, i24 %p_Result_13) nounwind

ST_2: tmp_15 [1/1] 2.39ns
_ifconv:108  %tmp_15 = icmp eq i23 %loc_V_1, 0


 <State 3>: 6.80ns
ST_3: p_Val2_13 [1/2] 2.39ns
_ifconv:24  %p_Val2_13 = call fastcc i95 @"sinGen_big_mult_v3small<71, 24, 17>"(i71 %Med_V, i24 %p_Result_13) nounwind

ST_3: p_Val2_14 [1/1] 0.00ns
_ifconv:25  %p_Val2_14 = call i49 @_ssdm_op_PartSelect.i49.i95.i32.i32(i95 %p_Val2_13, i32 19, i32 67)

ST_3: tmp_27_i [1/1] 0.00ns
_ifconv:26  %tmp_27_i = call i3 @_ssdm_op_PartSelect.i3.i95.i32.i32(i95 %p_Val2_13, i32 68, i32 70) nounwind

ST_3: p_Val2_31 [1/1] 1.37ns
_ifconv:27  %p_Val2_31 = select i1 %closepath, i3 0, i3 %tmp_27_i

ST_3: tmp_20 [1/1] 0.00ns
_ifconv:28  %tmp_20 = trunc i3 %p_Val2_31 to i1

ST_3: p_Val2_i [1/1] 3.04ns
_ifconv:29  %p_Val2_i = sub i49 0, %p_Val2_14

ST_3: p_Val2_19 [1/1] 1.37ns
_ifconv:30  %p_Val2_19 = select i1 %tmp_20, i49 %p_Val2_i, i49 %p_Val2_14

ST_3: p_Result_i2_i [1/1] 0.00ns
_ifconv:31  %p_Result_i2_i = call i18 @_ssdm_op_PartSelect.i18.i49.i32.i32(i49 %p_Val2_19, i32 31, i32 48) nounwind


 <State 4>: 6.77ns
ST_4: p_i [1/1] 1.72ns
_ifconv:10  %p_i = add i8 -125, %loc_V

ST_4: storemerge_i [1/1] 1.37ns
_ifconv:11  %storemerge_i = select i1 %closepath, i8 %p_i, i8 0

ST_4: p_Result_14 [1/1] 0.00ns
_ifconv:32  %p_Result_14 = call i19 @_ssdm_op_BitConcatenate.i19.i18.i1(i18 %p_Result_i2_i, i1 true) nounwind

ST_4: p_Result_15 [1/1] 0.00ns
_ifconv:33  %p_Result_15 = call i19 @llvm.part.select.i19(i19 %p_Result_14, i32 18, i32 0) nounwind

ST_4: p_Result_16 [1/1] 0.00ns
_ifconv:34  %p_Result_16 = call i32 @_ssdm_op_BitConcatenate.i32.i13.i19(i13 -1, i19 %p_Result_15) nounwind

ST_4: val_assign [1/1] 3.21ns
_ifconv:35  %val_assign = call i32 @llvm.cttz.i32(i32 %p_Result_16, i1 true) nounwind

ST_4: Mx_zeros_V [1/1] 0.00ns
_ifconv:36  %Mx_zeros_V = trunc i32 %val_assign to i5

ST_4: tmp_28_i [1/1] 0.00ns
_ifconv:37  %tmp_28_i = zext i5 %Mx_zeros_V to i49

ST_4: p_Val2_22 [1/1] 3.56ns
_ifconv:38  %p_Val2_22 = shl i49 %p_Val2_19, %tmp_28_i

ST_4: p_Val2_23 [1/1] 0.00ns
_ifconv:39  %p_Val2_23 = call i31 @_ssdm_op_PartSelect.i31.i49.i32.i32(i49 %p_Val2_22, i32 18, i32 48)

ST_4: tmp_22 [1/1] 0.00ns
_ifconv:40  %tmp_22 = call i1 @_ssdm_op_BitSelect.i1.i49.i32(i49 %p_Val2_22, i32 17)

ST_4: tmp_31_i [1/1] 0.00ns
_ifconv:43  %tmp_31_i = zext i5 %Mx_zeros_V to i8

ST_4: Ex_V [1/1] 1.72ns
_ifconv:44  %Ex_V = sub i8 %storemerge_i, %tmp_31_i

ST_4: isNeg [1/1] 0.00ns
_ifconv:46  %isNeg = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %Ex_V, i32 7)

ST_4: tmp_14 [1/1] 2.00ns
_ifconv:107  %tmp_14 = icmp eq i8 %loc_V, 0

ST_4: or_cond [1/1] 1.37ns
_ifconv:109  %or_cond = and i1 %tmp_14, %tmp_15

ST_4: tmp_i [1/1] 2.00ns
_ifconv:110  %tmp_i = icmp eq i8 %loc_V, -1

ST_4: sel_tmp5_demorgan [1/1] 1.37ns
_ifconv:118  %sel_tmp5_demorgan = and i1 %tmp_14, %tmp_15

ST_4: sel_tmp5 [1/1] 1.37ns
_ifconv:119  %sel_tmp5 = xor i1 %sel_tmp5_demorgan, true

ST_4: sel_tmp6 [1/1] 1.37ns
_ifconv:120  %sel_tmp6 = and i1 %tmp_i, %sel_tmp5


 <State 5>: 3.09ns
ST_5: tmp_30_i [1/1] 0.00ns
_ifconv:41  %tmp_30_i = zext i1 %tmp_22 to i31

ST_5: p_Val2_32 [1/1] 2.44ns
_ifconv:42  %p_Val2_32 = add i31 %p_Val2_23, %tmp_30_i

ST_5: sh_i_cast [1/1] 0.00ns
_ifconv:45  %sh_i_cast = sext i8 %Ex_V to i9

ST_5: tmp_33_i [1/1] 1.72ns
_ifconv:47  %tmp_33_i = sub i9 0, %sh_i_cast

ST_5: sh_assign [1/1] 1.37ns
_ifconv:48  %sh_assign = select i1 %isNeg, i9 %tmp_33_i, i9 %sh_i_cast


 <State 6>: 7.14ns
ST_6: do_cos_read [1/1] 1.04ns
_ifconv:0  %do_cos_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %do_cos) nounwind

ST_6: sh_assign_1_i_cast8 [1/1] 0.00ns
_ifconv:49  %sh_assign_1_i_cast8 = sext i9 %sh_assign to i32

ST_6: sh_assign_1_i_cast [1/1] 0.00ns
_ifconv:50  %sh_assign_1_i_cast = sext i9 %sh_assign to i31

ST_6: tmp_34_i [1/1] 0.00ns
_ifconv:51  %tmp_34_i = zext i31 %p_Val2_32 to i32

ST_6: tmp_35_i [1/1] 2.80ns
_ifconv:52  %tmp_35_i = lshr i31 %p_Val2_32, %sh_assign_1_i_cast

ST_6: tmp_35_i_cast [1/1] 0.00ns
_ifconv:53  %tmp_35_i_cast = zext i31 %tmp_35_i to i32

ST_6: tmp_37_i [1/1] 2.80ns
_ifconv:54  %tmp_37_i = shl i32 %tmp_34_i, %sh_assign_1_i_cast8

ST_6: p_Val2_0_i245_in_i [1/1] 1.37ns
_ifconv:55  %p_Val2_0_i245_in_i = select i1 %isNeg, i32 %tmp_35_i_cast, i32 %tmp_37_i

ST_6: p_Result_s_40 [1/1] 0.00ns
_ifconv:56  %p_Result_s_40 = call i7 @_ssdm_op_PartSelect.i7.i32.i32.i32(i32 %p_Val2_0_i245_in_i, i32 24, i32 30)

ST_6: p_Val2_2 [1/1] 0.00ns
_ifconv:57  %p_Val2_2 = call i17 @_ssdm_op_PartSelect.i17.i32.i32.i32(i32 %p_Val2_0_i245_in_i, i32 7, i32 23)

ST_6: tmp_1 [1/1] 0.00ns
_ifconv:58  %tmp_1 = call i9 @_ssdm_op_PartSelect.i9.i32.i32.i32(i32 %p_Val2_0_i245_in_i, i32 15, i32 23)

ST_6: tmp [1/1] 1.94ns
_ifconv:62  %tmp = call i1 @_ssdm_op_Mux.ap_auto.8i1.i3(i1 false, i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i3 %p_Val2_31) nounwind

ST_6: tmp_4 [1/1] 1.37ns
_ifconv:63  %tmp_4 = xor i1 %tmp, true

ST_6: tmp_s [1/1] 1.94ns
_ifconv:64  %tmp_s = call i1 @_ssdm_op_Mux.ap_auto.8i1.i3(i1 false, i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 false, i3 %p_Val2_31) nounwind

ST_6: tmp_6 [1/1] 1.37ns
_ifconv:65  %tmp_6 = select i1 %do_cos_read, i1 %tmp, i1 %tmp_s

ST_6: cos_basis [1/1] 1.37ns
_ifconv:66  %cos_basis = select i1 %do_cos_read, i1 %tmp_4, i1 %tmp_s

ST_6: not_do_cos [1/1] 1.37ns
_ifconv:67  %not_do_cos = xor i1 %do_cos_read, true

ST_6: sin_basis [1/1] 1.37ns
_ifconv:68  %sin_basis = xor i1 %tmp_6, %not_do_cos

ST_6: p_Result_17 [1/1] 0.00ns
_ifconv:69  %p_Result_17 = call i8 @_ssdm_op_BitConcatenate.i8.i1.i7(i1 %sin_basis, i7 %p_Result_s_40)

ST_6: p_Ex_V_ret [1/1] 1.37ns
_ifconv:70  %p_Ex_V_ret = select i1 %cos_basis, i8 0, i8 %Ex_V

ST_6: p_Mx_V_ret [1/1] 1.37ns
_ifconv:71  %p_Mx_V_ret = select i1 %cos_basis, i31 -1, i31 %p_Val2_32

ST_6: tmp_8 [1/1] 0.00ns
_ifconv:72  %tmp_8 = zext i8 %p_Result_17 to i64

ST_6: hls_sin_cos_K0_V_addr [1/1] 0.00ns
_ifconv:73  %hls_sin_cos_K0_V_addr = getelementptr [256 x i30]* @hls_sin_cos_K0_V, i64 0, i64 %tmp_8

ST_6: p_Val2_s [2/2] 2.45ns
_ifconv:74  %p_Val2_s = load i30* %hls_sin_cos_K0_V_addr, align 4

ST_6: hls_sin_cos_K1_V_addr [1/1] 0.00ns
_ifconv:77  %hls_sin_cos_K1_V_addr = getelementptr [256 x i23]* @hls_sin_cos_K1_V, i64 0, i64 %tmp_8

ST_6: hls_sin_cos_K1_V_load [2/2] 2.45ns
_ifconv:78  %hls_sin_cos_K1_V_load = load i23* %hls_sin_cos_K1_V_addr, align 4

ST_6: hls_sin_cos_K2_V_addr [1/1] 0.00ns
_ifconv:83  %hls_sin_cos_K2_V_addr = getelementptr [256 x i15]* @hls_sin_cos_K2_V, i64 0, i64 %tmp_8

ST_6: hls_sin_cos_K2_V_load [2/2] 2.46ns
_ifconv:84  %hls_sin_cos_K2_V_load = load i15* %hls_sin_cos_K2_V_addr, align 2

ST_6: p_Result_19 [1/1] 0.00ns
_ifconv:102  %p_Result_19 = call i4 @_ssdm_op_BitConcatenate.i4.i1.i3(i1 %p_Result_s, i3 %p_Val2_31)

ST_6: tmp_11 [1/1] 2.23ns
_ifconv:103  %tmp_11 = call i1 @_ssdm_op_Mux.ap_auto.16i1.i4(i1 false, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i4 %p_Result_19) nounwind

ST_6: tmp_12 [1/1] 2.23ns
_ifconv:104  %tmp_12 = call i1 @_ssdm_op_Mux.ap_auto.16i1.i4(i1 false, i1 false, i1 true, i1 false, i1 true, i1 true, i1 false, i1 true, i1 true, i1 false, i1 true, i1 true, i1 false, i1 true, i1 false, i1 false, i4 %p_Result_19) nounwind

ST_6: tmp_13 [1/1] 1.37ns
_ifconv:105  %tmp_13 = select i1 %cos_basis, i1 %tmp_11, i1 %tmp_12

ST_6: sel_tmp1 [1/1] 1.37ns
_ifconv:114  %sel_tmp1 = and i1 %or_cond, %not_do_cos

ST_6: sel_tmp3 [1/1] 1.37ns
_ifconv:117  %sel_tmp3 = and i1 %or_cond, %do_cos_read


 <State 7>: 6.38ns
ST_7: OP1_V_3 [1/1] 0.00ns
_ifconv:59  %OP1_V_3 = zext i9 %tmp_1 to i18

ST_7: p_Val2_3 [1/1] 6.38ns
_ifconv:60  %p_Val2_3 = mul i18 %OP1_V_3, %OP1_V_3

ST_7: tmp_3 [1/1] 0.00ns
_ifconv:61  %tmp_3 = call i17 @_ssdm_op_PartSelect.i17.i18.i32.i32(i18 %p_Val2_3, i32 1, i32 17)

ST_7: p_Val2_s [1/2] 2.45ns
_ifconv:74  %p_Val2_s = load i30* %hls_sin_cos_K0_V_addr, align 4

ST_7: hls_sin_cos_K1_V_load [1/2] 2.45ns
_ifconv:78  %hls_sin_cos_K1_V_load = load i23* %hls_sin_cos_K1_V_addr, align 4

ST_7: hls_sin_cos_K2_V_load [1/2] 2.46ns
_ifconv:84  %hls_sin_cos_K2_V_load = load i15* %hls_sin_cos_K2_V_addr, align 2


 <State 8>: 6.38ns
ST_8: OP1_V [1/1] 0.00ns
_ifconv:76  %OP1_V = zext i17 %p_Val2_2 to i40

ST_8: OP2_V_1 [1/1] 0.00ns
_ifconv:79  %OP2_V_1 = sext i23 %hls_sin_cos_K1_V_load to i40

ST_8: p_Val2_5 [1/1] 6.38ns
_ifconv:80  %p_Val2_5 = mul i40 %OP2_V_1, %OP1_V

ST_8: tmp_5 [1/1] 0.00ns
_ifconv:81  %tmp_5 = call i24 @_ssdm_op_PartSelect.i24.i40.i32.i32(i40 %p_Val2_5, i32 16, i32 39)

ST_8: OP1_V_1 [1/1] 0.00ns
_ifconv:82  %OP1_V_1 = zext i17 %tmp_3 to i32

ST_8: OP2_V_2 [1/1] 0.00ns
_ifconv:85  %OP2_V_2 = sext i15 %hls_sin_cos_K2_V_load to i32

ST_8: p_Val2_6 [1/1] 6.38ns
_ifconv:86  %p_Val2_6 = mul i32 %OP1_V_1, %OP2_V_2

ST_8: tmp_7 [1/1] 0.00ns
_ifconv:87  %tmp_7 = call i16 @_ssdm_op_PartSelect.i16.i32.i32.i32(i32 %p_Val2_6, i32 16, i32 31)


 <State 9>: 3.94ns
ST_9: p_Val2_7 [1/1] 0.00ns
_ifconv:75  %p_Val2_7 = call i31 @_ssdm_op_BitConcatenate.i31.i30.i1(i30 %p_Val2_s, i1 false)

ST_9: tmp_9 [1/1] 0.00ns
_ifconv:88  %tmp_9 = sext i31 %p_Val2_7 to i32

ST_9: tmp_10 [1/1] 0.00ns
_ifconv:89  %tmp_10 = sext i24 %tmp_5 to i32

ST_9: p_Val2_8 [1/1] 1.97ns
_ifconv:90  %p_Val2_8 = add nsw i32 %tmp_9, %tmp_10

ST_9: tmp_18_cast [1/1] 0.00ns
_ifconv:91  %tmp_18_cast = sext i16 %tmp_7 to i32

ST_9: r_V [1/1] 1.97ns
_ifconv:92  %r_V = add i32 %p_Val2_8, %tmp_18_cast


 <State 10>: 6.08ns
ST_10: OP1_V_2_cast [1/1] 0.00ns
_ifconv:93  %OP1_V_2_cast = sext i32 %r_V to i62

ST_10: OP2_V_3_cast [1/1] 0.00ns
_ifconv:94  %OP2_V_3_cast = zext i31 %p_Mx_V_ret to i62

ST_10: p_Val2_9 [6/6] 6.08ns
_ifconv:95  %p_Val2_9 = mul i62 %OP1_V_2_cast, %OP2_V_3_cast


 <State 11>: 6.08ns
ST_11: p_Val2_9 [5/6] 6.08ns
_ifconv:95  %p_Val2_9 = mul i62 %OP1_V_2_cast, %OP2_V_3_cast


 <State 12>: 6.08ns
ST_12: p_Val2_9 [4/6] 6.08ns
_ifconv:95  %p_Val2_9 = mul i62 %OP1_V_2_cast, %OP2_V_3_cast


 <State 13>: 6.08ns
ST_13: p_Val2_9 [3/6] 6.08ns
_ifconv:95  %p_Val2_9 = mul i62 %OP1_V_2_cast, %OP2_V_3_cast


 <State 14>: 6.08ns
ST_14: p_Val2_9 [2/6] 6.08ns
_ifconv:95  %p_Val2_9 = mul i62 %OP1_V_2_cast, %OP2_V_3_cast


 <State 15>: 6.08ns
ST_15: p_Val2_9 [1/6] 6.08ns
_ifconv:95  %p_Val2_9 = mul i62 %OP1_V_2_cast, %OP2_V_3_cast

ST_15: p_0 [1/1] 0.00ns
_ifconv:96  %p_0 = call i31 @_ssdm_op_PartSelect.i31.i62.i32.i32(i62 %p_Val2_9, i32 31, i32 61)

ST_15: rhs_V [1/1] 0.00ns
_ifconv:97  %rhs_V = sext i8 %p_Ex_V_ret to i9

ST_15: r_V_1 [1/1] 1.72ns
_ifconv:98  %r_V_1 = sub i9 0, %rhs_V

ST_15: resultf [2/2] 0.00ns
_ifconv:99  %resultf = call fastcc float @"sinGen_my_to_float<31, 1>"(i31 %p_0, i9 %r_V_1) nounwind


 <State 16>: 8.42ns
ST_16: resultf [1/2] 8.42ns
_ifconv:99  %resultf = call fastcc float @"sinGen_my_to_float<31, 1>"(i31 %p_0, i9 %r_V_1) nounwind


 <State 17>: 4.11ns
ST_17: stg_138 [1/1] 0.00ns
_ifconv:2  call void (...)* @_ssdm_op_SpecMemCore([256 x i30]* @hls_sin_cos_K0_V, [1 x i8]* @p_str1806, [14 x i8]* @p_str1809, [1 x i8]* @p_str1806, i32 -1, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_17: stg_139 [1/1] 0.00ns
_ifconv:3  call void (...)* @_ssdm_op_SpecMemCore([256 x i23]* @hls_sin_cos_K1_V, [1 x i8]* @p_str1806, [14 x i8]* @p_str1809, [1 x i8]* @p_str1806, i32 -1, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_17: stg_140 [1/1] 0.00ns
_ifconv:4  call void (...)* @_ssdm_op_SpecMemCore([256 x i15]* @hls_sin_cos_K2_V, [1 x i8]* @p_str1806, [14 x i8]* @p_str1809, [1 x i8]* @p_str1806, i32 -1, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_17: stg_141 [1/1] 0.00ns
_ifconv:13  call void (...)* @_ssdm_op_SpecMemCore([13 x i100]* @hls_ref_4oPi_table_100_V, [1 x i8]* @p_str1806, [14 x i8]* @p_str1809, [1 x i8]* @p_str1806, i32 -1, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806, [1 x i8]* @p_str1806) nounwind

ST_17: p_Val2_25 [1/1] 0.00ns
_ifconv:100  %p_Val2_25 = bitcast float %resultf to i32

ST_17: p_Result_18 [1/1] 0.00ns
_ifconv:101  %p_Result_18 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_25, i32 31)

ST_17: p_Result_12 [1/1] 1.37ns
_ifconv:106  %p_Result_12 = or i1 %tmp_13, %p_Result_18

ST_17: p_Result_20 [1/1] 0.00ns
_ifconv:111  %p_Result_20 = call i32 @_ssdm_op_BitConcatenate.i32.i1.i31(i1 %p_Result_s, i31 0)

ST_17: tmp_25 [1/1] 0.00ns
_ifconv:112  %tmp_25 = trunc i32 %p_Val2_25 to i31

ST_17: p_Result_21 [1/1] 0.00ns
_ifconv:113  %p_Result_21 = call i32 @_ssdm_op_BitConcatenate.i32.i1.i31(i1 %p_Result_12, i31 %tmp_25)

ST_17: sel_tmp2_v [1/1] 1.37ns
_ifconv:115  %sel_tmp2_v = select i1 %sel_tmp1, i32 %p_Result_20, i32 %p_Result_21

ST_17: sel_tmp2 [1/1] 0.00ns
_ifconv:116  %sel_tmp2 = bitcast i32 %sel_tmp2_v to float

ST_17: sel_tmp4 [1/1] 1.37ns
_ifconv:121  %sel_tmp4 = select i1 %sel_tmp6, float 0x7FFFFFFFE0000000, float 1.000000e+00

ST_17: tmp_16 [1/1] 1.37ns
_ifconv:122  %tmp_16 = or i1 %sel_tmp6, %sel_tmp3

ST_17: p_s [1/1] 1.37ns
_ifconv:123  %p_s = select i1 %tmp_16, float %sel_tmp4, float %sel_tmp2

ST_17: stg_153 [1/1] 0.00ns
_ifconv:124  ret float %p_s



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
