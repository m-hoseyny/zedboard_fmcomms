// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _sinGen_my_to_float_31_1_s_HH_
#define _sinGen_my_to_float_31_1_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct sinGen_my_to_float_31_1_s : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<31> > in_V;
    sc_in< sc_lv<9> > prescale;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    sinGen_my_to_float_31_1_s(sc_module_name name);
    SC_HAS_PROCESS(sinGen_my_to_float_31_1_s);

    ~sinGen_my_to_float_31_1_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_22;
    sc_signal< sc_lv<32> > out_bits_0_V_fu_186_p5;
    sc_signal< sc_lv<32> > out_bits_0_V_reg_424;
    sc_signal< sc_lv<32> > p_Result_s_fu_210_p5;
    sc_signal< sc_lv<32> > p_Result_s_reg_429;
    sc_signal< sc_lv<2> > i_fu_228_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_48;
    sc_signal< sc_lv<32> > c_1_1_fu_252_p3;
    sc_signal< sc_lv<1> > exitcond_fu_222_p2;
    sc_signal< sc_lv<32> > c_1_2_fu_260_p3;
    sc_signal< sc_lv<1> > tmp_34_fu_268_p3;
    sc_signal< sc_lv<1> > tmp_34_reg_452;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_65;
    sc_signal< sc_lv<2> > i_1_fu_276_p2;
    sc_signal< sc_lv<2> > i_1_reg_456;
    sc_signal< sc_lv<32> > sh_assign_fu_286_p3;
    sc_signal< sc_lv<32> > sh_assign_reg_461;
    sc_signal< sc_lv<1> > isNeg_fu_294_p3;
    sc_signal< sc_lv<1> > isNeg_reg_467;
    sc_signal< sc_lv<32> > sh_assign_2_fu_308_p3;
    sc_signal< sc_lv<32> > sh_assign_2_reg_472;
    sc_signal< sc_lv<32> > shift_2_fu_316_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_84;
    sc_signal< sc_lv<31> > in_shift_V_fu_344_p3;
    sc_signal< sc_lv<32> > c_0_s_reg_80;
    sc_signal< sc_lv<32> > c_1_s_reg_92;
    sc_signal< sc_lv<2> > i1_reg_104;
    sc_signal< sc_lv<31> > in_shift_reg_115;
    sc_signal< sc_lv<1> > tmp_21_fu_352_p2;
    sc_signal< sc_lv<32> > shift_reg_125;
    sc_signal< sc_lv<2> > i2_reg_137;
    sc_signal< sc_lv<31> > p_Val2_in_phi_fu_151_p4;
    sc_signal< sc_lv<31> > p_Val2_in_reg_148;
    sc_signal< sc_lv<32> > shift_1_phi_fu_161_p4;
    sc_signal< sc_lv<32> > shift_1_reg_158;
    sc_signal< sc_lv<16> > p_Result_2_fu_168_p4;
    sc_signal< sc_lv<17> > tmp_fu_178_p3;
    sc_signal< sc_lv<15> > tmp_33_fu_198_p1;
    sc_signal< sc_lv<16> > tmp_s_fu_202_p3;
    sc_signal< sc_lv<1> > tmp_35_fu_234_p1;
    sc_signal< sc_lv<32> > out_bits_V_load_phi_fu_238_p3;
    sc_signal< sc_lv<32> > c_0_fu_244_p3;
    sc_signal< sc_lv<1> > tmp_36_fu_282_p1;
    sc_signal< sc_lv<32> > tmp_17_fu_302_p2;
    sc_signal< sc_lv<32> > tmp_18_fu_322_p1;
    sc_signal< sc_lv<32> > tmp_19_fu_326_p2;
    sc_signal< sc_lv<32> > tmp_20_fu_331_p2;
    sc_signal< sc_lv<31> > tmp_38_fu_336_p1;
    sc_signal< sc_lv<31> > tmp_39_fu_340_p1;
    sc_signal< sc_lv<8> > tmp_41_fu_372_p1;
    sc_signal< sc_lv<8> > tmp_23_fu_375_p2;
    sc_signal< sc_lv<8> > tmp_42_fu_381_p1;
    sc_signal< sc_lv<1> > tmp_22_fu_367_p2;
    sc_signal< sc_lv<8> > phitmp_fu_385_p2;
    sc_signal< sc_lv<8> > out_exp_V_fu_391_p3;
    sc_signal< sc_lv<23> > p_Val2_s_fu_357_p4;
    sc_signal< sc_lv<32> > p_Result_26_fu_399_p4;
    sc_signal< sc_lv<32> > result_write_assign_fu_409_p1;
    sc_signal< sc_lv<32> > ap_return_preg;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_st1_fsm_0;
    static const sc_lv<4> ap_ST_st2_fsm_1;
    static const sc_lv<4> ap_ST_st3_fsm_2;
    static const sc_lv<4> ap_ST_st4_fsm_3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<8> ap_const_lv8_7F;
    static const sc_lv<8> ap_const_lv8_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_bdd_22();
    void thread_ap_sig_bdd_48();
    void thread_ap_sig_bdd_65();
    void thread_ap_sig_bdd_84();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_c_0_fu_244_p3();
    void thread_c_1_1_fu_252_p3();
    void thread_c_1_2_fu_260_p3();
    void thread_exitcond_fu_222_p2();
    void thread_i_1_fu_276_p2();
    void thread_i_fu_228_p2();
    void thread_in_shift_V_fu_344_p3();
    void thread_isNeg_fu_294_p3();
    void thread_out_bits_0_V_fu_186_p5();
    void thread_out_bits_V_load_phi_fu_238_p3();
    void thread_out_exp_V_fu_391_p3();
    void thread_p_Result_26_fu_399_p4();
    void thread_p_Result_2_fu_168_p4();
    void thread_p_Result_s_fu_210_p5();
    void thread_p_Val2_in_phi_fu_151_p4();
    void thread_p_Val2_s_fu_357_p4();
    void thread_phitmp_fu_385_p2();
    void thread_result_write_assign_fu_409_p1();
    void thread_sh_assign_2_fu_308_p3();
    void thread_sh_assign_fu_286_p3();
    void thread_shift_1_phi_fu_161_p4();
    void thread_shift_2_fu_316_p2();
    void thread_tmp_17_fu_302_p2();
    void thread_tmp_18_fu_322_p1();
    void thread_tmp_19_fu_326_p2();
    void thread_tmp_20_fu_331_p2();
    void thread_tmp_21_fu_352_p2();
    void thread_tmp_22_fu_367_p2();
    void thread_tmp_23_fu_375_p2();
    void thread_tmp_33_fu_198_p1();
    void thread_tmp_34_fu_268_p3();
    void thread_tmp_35_fu_234_p1();
    void thread_tmp_36_fu_282_p1();
    void thread_tmp_38_fu_336_p1();
    void thread_tmp_39_fu_340_p1();
    void thread_tmp_41_fu_372_p1();
    void thread_tmp_42_fu_381_p1();
    void thread_tmp_fu_178_p3();
    void thread_tmp_s_fu_202_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
