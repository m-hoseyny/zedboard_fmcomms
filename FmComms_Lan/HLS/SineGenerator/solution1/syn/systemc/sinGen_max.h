// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _sinGen_max_HH_
#define _sinGen_max_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sinGen_fcmp_32ns_32ns_1_1.h"

namespace ap_rtl {

struct sinGen_max : public sc_module {
    // Port declarations 10
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > data_address0;
    sc_out< sc_logic > data_ce0;
    sc_in< sc_lv<32> > data_q0;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    sinGen_max(sc_module_name name);
    SC_HAS_PROCESS(sinGen_max);

    ~sinGen_max();

    sc_trace_file* mVcdFile;

    sinGen_fcmp_32ns_32ns_1_1<1,1,32,32,1>* sinGen_fcmp_32ns_32ns_1_1_U19;
    sinGen_fcmp_32ns_32ns_1_1<1,1,32,32,1>* sinGen_fcmp_32ns_32ns_1_1_U20;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_25;
    sc_signal< sc_lv<8> > i_1_fu_82_p2;
    sc_signal< sc_lv<8> > i_1_reg_283;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_44;
    sc_signal< sc_lv<1> > exitcond_fu_76_p2;
    sc_signal< sc_lv<32> > max_1_reg_293;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_58;
    sc_signal< sc_lv<1> > tmp_17_fu_128_p2;
    sc_signal< sc_lv<1> > tmp_17_reg_300;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_67;
    sc_signal< sc_lv<32> > max_1_2_fu_140_p1;
    sc_signal< sc_lv<32> > max_1_2_reg_307;
    sc_signal< sc_lv<1> > tmp_24_fu_213_p2;
    sc_signal< sc_lv<1> > tmp_24_reg_312;
    sc_signal< sc_lv<1> > tmp_25_fu_70_p2;
    sc_signal< sc_lv<1> > tmp_25_reg_317;
    sc_signal< sc_lv<1> > tmp_s_fu_219_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_322;
    sc_signal< sc_lv<32> > max_2_fu_234_p3;
    sc_signal< sc_lv<32> > max_2_reg_327;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_bdd_84;
    sc_signal< sc_lv<1> > sel_tmp6_fu_247_p2;
    sc_signal< sc_lv<1> > sel_tmp6_reg_332;
    sc_signal< sc_lv<1> > tmp_28_fu_252_p2;
    sc_signal< sc_lv<1> > tmp_28_reg_337;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_bdd_95;
    sc_signal< sc_lv<32> > max_3_fu_273_p3;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_bdd_106;
    sc_signal< sc_lv<32> > max_1_1_reg_42;
    sc_signal< sc_lv<8> > i_reg_54;
    sc_signal< sc_lv<64> > tmp_fu_88_p1;
    sc_signal< sc_lv<32> > grp_fu_65_p1;
    sc_signal< sc_lv<32> > tmp_25_fu_70_p0;
    sc_signal< sc_lv<32> > max_2_to_int_fu_93_p1;
    sc_signal< sc_lv<8> > tmp_13_fu_96_p4;
    sc_signal< sc_lv<23> > tmp_43_fu_106_p1;
    sc_signal< sc_lv<1> > notrhs_fu_116_p2;
    sc_signal< sc_lv<1> > notlhs_fu_110_p2;
    sc_signal< sc_lv<1> > tmp_15_fu_122_p2;
    sc_signal< sc_lv<1> > grp_fu_65_p2;
    sc_signal< sc_lv<32> > max_1_neg_fu_134_p2;
    sc_signal< sc_lv<32> > max_to_int_fu_159_p1;
    sc_signal< sc_lv<8> > tmp_18_fu_145_p4;
    sc_signal< sc_lv<23> > tmp_44_fu_155_p1;
    sc_signal< sc_lv<1> > notrhs1_fu_183_p2;
    sc_signal< sc_lv<1> > notlhs1_fu_177_p2;
    sc_signal< sc_lv<8> > tmp_20_fu_163_p4;
    sc_signal< sc_lv<23> > tmp_45_fu_173_p1;
    sc_signal< sc_lv<1> > notrhs2_fu_201_p2;
    sc_signal< sc_lv<1> > notlhs2_fu_195_p2;
    sc_signal< sc_lv<1> > tmp_22_fu_189_p2;
    sc_signal< sc_lv<1> > tmp_23_fu_207_p2;
    sc_signal< sc_lv<1> > tmp_26_fu_225_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_229_p2;
    sc_signal< sc_lv<1> > sel_tmp5_fu_241_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_257_p2;
    sc_signal< sc_lv<1> > sel_tmp3_fu_262_p2;
    sc_signal< sc_lv<32> > max_4_fu_267_p3;
    sc_signal< sc_lv<5> > grp_fu_65_opcode;
    sc_signal< sc_lv<5> > tmp_25_fu_70_opcode;
    sc_signal< sc_lv<32> > ap_return_preg;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_st1_fsm_0;
    static const sc_lv<7> ap_ST_st2_fsm_1;
    static const sc_lv<7> ap_ST_st3_fsm_2;
    static const sc_lv<7> ap_ST_st4_fsm_3;
    static const sc_lv<7> ap_ST_st5_fsm_4;
    static const sc_lv<7> ap_ST_st6_fsm_5;
    static const sc_lv<7> ap_ST_st7_fsm_6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<32> ap_const_lv32_80000000;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_bdd_106();
    void thread_ap_sig_bdd_25();
    void thread_ap_sig_bdd_44();
    void thread_ap_sig_bdd_58();
    void thread_ap_sig_bdd_67();
    void thread_ap_sig_bdd_84();
    void thread_ap_sig_bdd_95();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_data_address0();
    void thread_data_ce0();
    void thread_exitcond_fu_76_p2();
    void thread_grp_fu_65_opcode();
    void thread_grp_fu_65_p1();
    void thread_i_1_fu_82_p2();
    void thread_max_1_2_fu_140_p1();
    void thread_max_1_neg_fu_134_p2();
    void thread_max_2_fu_234_p3();
    void thread_max_2_to_int_fu_93_p1();
    void thread_max_3_fu_273_p3();
    void thread_max_4_fu_267_p3();
    void thread_max_to_int_fu_159_p1();
    void thread_notlhs1_fu_177_p2();
    void thread_notlhs2_fu_195_p2();
    void thread_notlhs_fu_110_p2();
    void thread_notrhs1_fu_183_p2();
    void thread_notrhs2_fu_201_p2();
    void thread_notrhs_fu_116_p2();
    void thread_sel_tmp2_fu_257_p2();
    void thread_sel_tmp3_fu_262_p2();
    void thread_sel_tmp5_fu_241_p2();
    void thread_sel_tmp6_fu_247_p2();
    void thread_sel_tmp_fu_229_p2();
    void thread_tmp_13_fu_96_p4();
    void thread_tmp_15_fu_122_p2();
    void thread_tmp_17_fu_128_p2();
    void thread_tmp_18_fu_145_p4();
    void thread_tmp_20_fu_163_p4();
    void thread_tmp_22_fu_189_p2();
    void thread_tmp_23_fu_207_p2();
    void thread_tmp_24_fu_213_p2();
    void thread_tmp_25_fu_70_opcode();
    void thread_tmp_25_fu_70_p0();
    void thread_tmp_26_fu_225_p2();
    void thread_tmp_28_fu_252_p2();
    void thread_tmp_43_fu_106_p1();
    void thread_tmp_44_fu_155_p1();
    void thread_tmp_45_fu_173_p1();
    void thread_tmp_fu_88_p1();
    void thread_tmp_s_fu_219_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
