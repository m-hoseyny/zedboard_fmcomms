// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sinGen_sinf_or_cosf (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        t_in,
        do_cos,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 17'b1;
parameter    ap_ST_st2_fsm_1 = 17'b10;
parameter    ap_ST_st3_fsm_2 = 17'b100;
parameter    ap_ST_st4_fsm_3 = 17'b1000;
parameter    ap_ST_st5_fsm_4 = 17'b10000;
parameter    ap_ST_st6_fsm_5 = 17'b100000;
parameter    ap_ST_st7_fsm_6 = 17'b1000000;
parameter    ap_ST_st8_fsm_7 = 17'b10000000;
parameter    ap_ST_st9_fsm_8 = 17'b100000000;
parameter    ap_ST_st10_fsm_9 = 17'b1000000000;
parameter    ap_ST_st11_fsm_10 = 17'b10000000000;
parameter    ap_ST_st12_fsm_11 = 17'b100000000000;
parameter    ap_ST_st13_fsm_12 = 17'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 17'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 17'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 17'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 17'b10000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_7E = 8'b1111110;
parameter    ap_const_lv8_C2 = 8'b11000010;
parameter    ap_const_lv8_3F = 8'b111111;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_63 = 32'b1100011;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv49_0 = 49'b0000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv8_83 = 8'b10000011;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv13_1FFF = 13'b1111111111111;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv31_7FFFFFFF = 31'b1111111111111111111111111111111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv32_7FFFFFFF = 32'b1111111111111111111111111111111;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] t_in;
input   do_cos;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm = 17'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_35;
wire   [3:0] hls_ref_4oPi_table_100_V_address0;
reg    hls_ref_4oPi_table_100_V_ce0;
wire   [99:0] hls_ref_4oPi_table_100_V_q0;
wire   [7:0] hls_sin_cos_K0_V_address0;
reg    hls_sin_cos_K0_V_ce0;
wire   [29:0] hls_sin_cos_K0_V_q0;
wire   [7:0] hls_sin_cos_K1_V_address0;
reg    hls_sin_cos_K1_V_ce0;
wire   [22:0] hls_sin_cos_K1_V_q0;
wire   [7:0] hls_sin_cos_K2_V_address0;
reg    hls_sin_cos_K2_V_ce0;
wire   [14:0] hls_sin_cos_K2_V_q0;
reg   [0:0] p_Result_s_reg_993;
wire   [7:0] loc_V_fu_246_p4;
reg   [7:0] loc_V_reg_999;
wire   [22:0] loc_V_1_fu_256_p1;
reg   [22:0] loc_V_1_reg_1006;
wire   [0:0] closepath_fu_260_p2;
reg   [0:0] closepath_reg_1012;
wire   [3:0] tmp_19_fu_295_p1;
reg   [3:0] tmp_19_reg_1023;
wire   [23:0] p_Result_13_fu_299_p3;
reg   [23:0] p_Result_13_reg_1028;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_93;
reg   [70:0] Med_V_reg_1033;
wire   [0:0] tmp_15_fu_327_p2;
reg   [0:0] tmp_15_reg_1038;
wire   [2:0] p_Val2_31_fu_352_p3;
reg   [2:0] p_Val2_31_reg_1044;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_106;
wire    grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_done;
wire   [48:0] p_Val2_19_fu_369_p3;
reg   [48:0] p_Val2_19_reg_1051;
reg   [17:0] p_Result_i2_i_reg_1056;
reg   [30:0] p_Val2_23_reg_1061;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_123;
reg   [0:0] tmp_22_reg_1066;
wire   [7:0] Ex_V_fu_467_p2;
reg   [7:0] Ex_V_reg_1071;
reg   [0:0] isNeg_reg_1077;
wire   [0:0] or_cond_fu_486_p2;
reg   [0:0] or_cond_reg_1083;
wire   [0:0] sel_tmp6_fu_507_p2;
reg   [0:0] sel_tmp6_reg_1089;
wire   [30:0] p_Val2_32_fu_516_p2;
reg   [30:0] p_Val2_32_reg_1095;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_142;
wire   [8:0] sh_assign_fu_530_p3;
reg   [8:0] sh_assign_reg_1102;
reg   [16:0] p_Val2_2_reg_1108;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_153;
reg   [8:0] tmp_1_reg_1113;
wire   [7:0] p_Ex_V_ret_fu_682_p3;
reg   [7:0] p_Ex_V_ret_reg_1118;
wire   [30:0] p_Mx_V_ret_fu_689_p3;
reg   [30:0] p_Mx_V_ret_reg_1123;
wire   [0:0] tmp_13_fu_785_p3;
reg   [0:0] tmp_13_reg_1143;
wire   [0:0] sel_tmp1_fu_793_p2;
reg   [0:0] sel_tmp1_reg_1148;
wire   [0:0] sel_tmp3_fu_798_p2;
reg   [0:0] sel_tmp3_reg_1153;
reg   [16:0] tmp_3_reg_1158;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_180;
reg   [29:0] p_Val2_s_reg_1163;
reg  signed [22:0] hls_sin_cos_K1_V_load_reg_1168;
reg  signed [14:0] hls_sin_cos_K2_V_load_reg_1173;
reg   [23:0] tmp_5_reg_1178;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_192;
reg   [15:0] tmp_7_reg_1183;
wire   [31:0] r_V_fu_875_p2;
reg  signed [31:0] r_V_reg_1188;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_203;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_212;
reg   [30:0] p_0_reg_1203;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_223;
wire   [8:0] r_V_1_fu_907_p2;
reg   [8:0] r_V_1_reg_1208;
wire   [31:0] grp_sinGen_my_to_float_31_1_s_fu_228_ap_return;
reg   [31:0] resultf_reg_1213;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_234;
wire    grp_sinGen_my_to_float_31_1_s_fu_228_ap_done;
wire    grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_start;
wire    grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_idle;
wire    grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_ready;
wire   [70:0] grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_a_V;
wire   [23:0] grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_b_V;
wire   [94:0] grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_return;
wire    grp_sinGen_my_to_float_31_1_s_fu_228_ap_start;
wire    grp_sinGen_my_to_float_31_1_s_fu_228_ap_idle;
wire    grp_sinGen_my_to_float_31_1_s_fu_228_ap_ready;
wire   [30:0] grp_sinGen_my_to_float_31_1_s_fu_228_in_V;
wire   [8:0] grp_sinGen_my_to_float_31_1_s_fu_228_prescale;
reg    grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_start_ap_start_reg = 1'b0;
reg    grp_sinGen_my_to_float_31_1_s_fu_228_ap_start_ap_start_reg = 1'b0;
wire   [63:0] tmp_5_i_i_fu_290_p1;
wire   [63:0] tmp_8_fu_696_p1;
wire   [31:0] p_Val2_28_fu_234_p1;
wire   [7:0] p_op_i_fu_266_p2;
wire   [7:0] addr_V_fu_272_p3;
wire   [3:0] tmp_2_fu_280_p4;
wire   [99:0] tmp_7_i_i_fu_307_p1;
wire   [99:0] r_V_3_fu_310_p2;
wire   [2:0] tmp_27_i_fu_342_p4;
wire   [48:0] p_Val2_14_fu_332_p4;
wire   [0:0] tmp_20_fu_359_p1;
wire   [48:0] p_Val2_i_fu_363_p2;
wire   [7:0] p_i_fu_387_p2;
wire   [18:0] p_Result_14_fu_399_p3;
reg   [18:0] p_Result_15_fu_406_p4;
wire   [31:0] p_Result_16_fu_416_p3;
reg   [31:0] val_assign_fu_424_p3;
wire   [4:0] Mx_zeros_V_fu_432_p1;
wire   [48:0] tmp_28_i_fu_436_p1;
wire   [48:0] p_Val2_22_fu_440_p2;
wire   [7:0] storemerge_i_fu_392_p3;
wire   [7:0] tmp_31_i_fu_463_p1;
wire   [0:0] tmp_14_fu_481_p2;
wire   [0:0] sel_tmp5_demorgan_fu_496_p2;
wire   [0:0] tmp_i_fu_491_p2;
wire   [0:0] sel_tmp5_fu_501_p2;
wire   [30:0] tmp_30_i_fu_513_p1;
wire  signed [8:0] sh_i_cast_fu_521_p1;
wire   [8:0] tmp_33_i_fu_524_p2;
wire  signed [30:0] sh_assign_1_i_cast_fu_540_p1;
wire   [30:0] tmp_35_i_fu_546_p2;
wire   [31:0] tmp_34_i_fu_543_p1;
wire  signed [31:0] sh_assign_1_i_cast8_fu_537_p1;
wire   [31:0] tmp_35_i_cast_fu_551_p1;
wire   [31:0] tmp_37_i_fu_555_p2;
wire   [31:0] p_Val2_0_i245_in_i_fu_561_p3;
wire   [0:0] tmp_fu_598_p10;
wire   [0:0] tmp_6_fu_646_p0;
wire   [0:0] tmp_s_fu_625_p10;
wire   [0:0] cos_basis_fu_654_p0;
wire   [0:0] tmp_4_fu_619_p2;
wire   [0:0] not_do_cos_fu_662_p0;
wire   [0:0] tmp_6_fu_646_p3;
wire   [0:0] not_do_cos_fu_662_p2;
wire   [0:0] sin_basis_fu_668_p2;
wire   [6:0] p_Result_s_40_fu_568_p4;
wire   [0:0] cos_basis_fu_654_p3;
wire   [7:0] p_Result_17_fu_674_p3;
wire   [3:0] p_Result_19_fu_703_p3;
wire   [0:0] tmp_11_fu_709_p18;
wire   [0:0] tmp_12_fu_747_p18;
wire   [0:0] sel_tmp3_fu_798_p1;
wire   [8:0] p_Val2_3_fu_806_p0;
wire   [17:0] OP1_V_3_fu_803_p1;
wire   [8:0] p_Val2_3_fu_806_p1;
wire   [17:0] p_Val2_3_fu_806_p2;
wire  signed [39:0] p_Val2_5_fu_979_p2;
wire  signed [31:0] p_Val2_6_fu_986_p2;
wire   [30:0] p_Val2_7_fu_852_p3;
wire  signed [31:0] tmp_9_fu_859_p1;
wire  signed [31:0] tmp_10_fu_863_p1;
wire   [31:0] p_Val2_8_fu_866_p2;
wire  signed [31:0] tmp_18_cast_fu_872_p1;
wire   [30:0] grp_fu_887_p1;
wire   [61:0] grp_fu_887_p2;
wire  signed [8:0] rhs_V_fu_904_p1;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_587;
wire   [31:0] p_Val2_25_fu_914_p1;
wire   [0:0] p_Result_18_fu_917_p3;
wire   [0:0] p_Result_12_fu_925_p2;
wire   [30:0] tmp_25_fu_937_p1;
wire   [31:0] p_Result_20_fu_930_p3;
wire   [31:0] p_Result_21_fu_941_p3;
wire   [31:0] sel_tmp2_v_fu_949_p3;
wire   [0:0] tmp_16_fu_967_p2;
wire   [31:0] sel_tmp4_fu_960_p3;
wire   [31:0] sel_tmp2_fu_956_p1;
wire   [16:0] p_Val2_5_fu_979_p1;
wire   [16:0] p_Val2_6_fu_986_p0;
wire    grp_fu_887_ce;
reg   [16:0] ap_NS_fsm;
wire   [61:0] grp_fu_887_p10;
wire   [39:0] p_Val2_5_fu_979_p10;
wire   [31:0] p_Val2_6_fu_986_p00;


sinGen_sinf_or_cosf_hls_ref_4oPi_table_100_V #(
    .DataWidth( 100 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
hls_ref_4oPi_table_100_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( hls_ref_4oPi_table_100_V_address0 ),
    .ce0( hls_ref_4oPi_table_100_V_ce0 ),
    .q0( hls_ref_4oPi_table_100_V_q0 )
);

sinGen_sinf_or_cosf_hls_sin_cos_K0_V #(
    .DataWidth( 30 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
hls_sin_cos_K0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( hls_sin_cos_K0_V_address0 ),
    .ce0( hls_sin_cos_K0_V_ce0 ),
    .q0( hls_sin_cos_K0_V_q0 )
);

sinGen_sinf_or_cosf_hls_sin_cos_K1_V #(
    .DataWidth( 23 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
hls_sin_cos_K1_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( hls_sin_cos_K1_V_address0 ),
    .ce0( hls_sin_cos_K1_V_ce0 ),
    .q0( hls_sin_cos_K1_V_q0 )
);

sinGen_sinf_or_cosf_hls_sin_cos_K2_V #(
    .DataWidth( 15 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
hls_sin_cos_K2_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( hls_sin_cos_K2_V_address0 ),
    .ce0( hls_sin_cos_K2_V_ce0 ),
    .q0( hls_sin_cos_K2_V_q0 )
);

sinGen_big_mult_v3small_71_24_17_s grp_sinGen_big_mult_v3small_71_24_17_s_fu_222(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_start ),
    .ap_done( grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_done ),
    .ap_idle( grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_idle ),
    .ap_ready( grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_ready ),
    .a_V( grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_a_V ),
    .b_V( grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_b_V ),
    .ap_return( grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_return )
);

sinGen_my_to_float_31_1_s grp_sinGen_my_to_float_31_1_s_fu_228(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_sinGen_my_to_float_31_1_s_fu_228_ap_start ),
    .ap_done( grp_sinGen_my_to_float_31_1_s_fu_228_ap_done ),
    .ap_idle( grp_sinGen_my_to_float_31_1_s_fu_228_ap_idle ),
    .ap_ready( grp_sinGen_my_to_float_31_1_s_fu_228_ap_ready ),
    .in_V( grp_sinGen_my_to_float_31_1_s_fu_228_in_V ),
    .prescale( grp_sinGen_my_to_float_31_1_s_fu_228_prescale ),
    .ap_return( grp_sinGen_my_to_float_31_1_s_fu_228_ap_return )
);

sinGen_mux_8to1_sel3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
sinGen_mux_8to1_sel3_1_1_U6(
    .din1( ap_const_lv1_0 ),
    .din2( ap_const_lv1_1 ),
    .din3( ap_const_lv1_1 ),
    .din4( ap_const_lv1_0 ),
    .din5( ap_const_lv1_0 ),
    .din6( ap_const_lv1_1 ),
    .din7( ap_const_lv1_1 ),
    .din8( ap_const_lv1_0 ),
    .din9( p_Val2_31_reg_1044 ),
    .dout( tmp_fu_598_p10 )
);

sinGen_mux_8to1_sel3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
sinGen_mux_8to1_sel3_1_1_U7(
    .din1( ap_const_lv1_0 ),
    .din2( ap_const_lv1_1 ),
    .din3( ap_const_lv1_1 ),
    .din4( ap_const_lv1_0 ),
    .din5( ap_const_lv1_0 ),
    .din6( ap_const_lv1_1 ),
    .din7( ap_const_lv1_1 ),
    .din8( ap_const_lv1_0 ),
    .din9( p_Val2_31_reg_1044 ),
    .dout( tmp_s_fu_625_p10 )
);

sinGen_mux_16to1_sel4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 1 ),
    .din17_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
sinGen_mux_16to1_sel4_1_1_U8(
    .din1( ap_const_lv1_0 ),
    .din2( ap_const_lv1_0 ),
    .din3( ap_const_lv1_0 ),
    .din4( ap_const_lv1_1 ),
    .din5( ap_const_lv1_1 ),
    .din6( ap_const_lv1_1 ),
    .din7( ap_const_lv1_1 ),
    .din8( ap_const_lv1_0 ),
    .din9( ap_const_lv1_0 ),
    .din10( ap_const_lv1_1 ),
    .din11( ap_const_lv1_1 ),
    .din12( ap_const_lv1_1 ),
    .din13( ap_const_lv1_1 ),
    .din14( ap_const_lv1_0 ),
    .din15( ap_const_lv1_0 ),
    .din16( ap_const_lv1_0 ),
    .din17( p_Result_19_fu_703_p3 ),
    .dout( tmp_11_fu_709_p18 )
);

sinGen_mux_16to1_sel4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 1 ),
    .din17_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
sinGen_mux_16to1_sel4_1_1_U9(
    .din1( ap_const_lv1_0 ),
    .din2( ap_const_lv1_0 ),
    .din3( ap_const_lv1_1 ),
    .din4( ap_const_lv1_0 ),
    .din5( ap_const_lv1_1 ),
    .din6( ap_const_lv1_1 ),
    .din7( ap_const_lv1_0 ),
    .din8( ap_const_lv1_1 ),
    .din9( ap_const_lv1_1 ),
    .din10( ap_const_lv1_0 ),
    .din11( ap_const_lv1_1 ),
    .din12( ap_const_lv1_1 ),
    .din13( ap_const_lv1_0 ),
    .din14( ap_const_lv1_1 ),
    .din15( ap_const_lv1_0 ),
    .din16( ap_const_lv1_0 ),
    .din17( p_Result_19_fu_703_p3 ),
    .dout( tmp_12_fu_747_p18 )
);

sinGen_mul_32s_31ns_62_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 62 ))
sinGen_mul_32s_31ns_62_6_U10(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( r_V_reg_1188 ),
    .din1( grp_fu_887_p1 ),
    .ce( grp_fu_887_ce ),
    .dout( grp_fu_887_p2 )
);

sinGen_mul_mul_23s_17ns_40_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 23 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 40 ))
sinGen_mul_mul_23s_17ns_40_1_U11(
    .din0( hls_sin_cos_K1_V_load_reg_1168 ),
    .din1( p_Val2_5_fu_979_p1 ),
    .dout( p_Val2_5_fu_979_p2 )
);

sinGen_mul_mul_17ns_15s_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 32 ))
sinGen_mul_mul_17ns_15s_32_1_U12(
    .din0( p_Val2_6_fu_986_p0 ),
    .din1( hls_sin_cos_K2_V_load_reg_1173 ),
    .dout( p_Val2_6_fu_986_p2 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_ready)) begin
            grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_grp_sinGen_my_to_float_31_1_s_fu_228_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_sinGen_my_to_float_31_1_s_fu_228_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
            grp_sinGen_my_to_float_31_1_s_fu_228_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_sinGen_my_to_float_31_1_s_fu_228_ap_ready)) begin
            grp_sinGen_my_to_float_31_1_s_fu_228_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        Ex_V_reg_1071 <= Ex_V_fu_467_p2;
        isNeg_reg_1077 <= Ex_V_fu_467_p2[ap_const_lv32_7];
        or_cond_reg_1083 <= or_cond_fu_486_p2;
        p_Val2_23_reg_1061 <= {{p_Val2_22_fu_440_p2[ap_const_lv32_30 : ap_const_lv32_12]}};
        sel_tmp6_reg_1089 <= sel_tmp6_fu_507_p2;
        tmp_22_reg_1066 <= p_Val2_22_fu_440_p2[ap_const_lv32_11];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        Med_V_reg_1033 <= {{r_V_3_fu_310_p2[ap_const_lv32_63 : ap_const_lv32_1D]}};
        p_Result_13_reg_1028[22 : 0] <= p_Result_13_fu_299_p3[22 : 0];
        tmp_15_reg_1038 <= tmp_15_fu_327_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        closepath_reg_1012 <= closepath_fu_260_p2;
        loc_V_1_reg_1006 <= loc_V_1_fu_256_p1;
        loc_V_reg_999 <= {{p_Val2_28_fu_234_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
        p_Result_s_reg_993 <= p_Val2_28_fu_234_p1[ap_const_lv32_1F];
        tmp_19_reg_1023 <= tmp_19_fu_295_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        hls_sin_cos_K1_V_load_reg_1168 <= hls_sin_cos_K1_V_q0;
        hls_sin_cos_K2_V_load_reg_1173 <= hls_sin_cos_K2_V_q0;
        p_Val2_s_reg_1163 <= hls_sin_cos_K0_V_q0;
        tmp_3_reg_1158 <= {{p_Val2_3_fu_806_p2[ap_const_lv32_11 : ap_const_lv32_1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        p_0_reg_1203 <= {{grp_fu_887_p2[ap_const_lv32_3D : ap_const_lv32_1F]}};
        r_V_1_reg_1208 <= r_V_1_fu_907_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        p_Ex_V_ret_reg_1118 <= p_Ex_V_ret_fu_682_p3;
        p_Mx_V_ret_reg_1123 <= p_Mx_V_ret_fu_689_p3;
        p_Val2_2_reg_1108 <= {{p_Val2_0_i245_in_i_fu_561_p3[ap_const_lv32_17 : ap_const_lv32_7]}};
        sel_tmp1_reg_1148 <= sel_tmp1_fu_793_p2;
        sel_tmp3_reg_1153 <= sel_tmp3_fu_798_p2;
        tmp_13_reg_1143 <= tmp_13_fu_785_p3;
        tmp_1_reg_1113 <= {{p_Val2_0_i245_in_i_fu_561_p3[ap_const_lv32_17 : ap_const_lv32_F]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_logic_0 == grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_done))) begin
        p_Result_i2_i_reg_1056 <= {{p_Val2_19_fu_369_p3[ap_const_lv32_30 : ap_const_lv32_1F]}};
        p_Val2_19_reg_1051 <= p_Val2_19_fu_369_p3;
        p_Val2_31_reg_1044 <= p_Val2_31_fu_352_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        p_Val2_32_reg_1095 <= p_Val2_32_fu_516_p2;
        sh_assign_reg_1102 <= sh_assign_fu_530_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        r_V_reg_1188 <= r_V_fu_875_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & ~(ap_const_logic_0 == grp_sinGen_my_to_float_31_1_s_fu_228_ap_done))) begin
        resultf_reg_1213 <= grp_sinGen_my_to_float_31_1_s_fu_228_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        tmp_5_reg_1178 <= {{p_Val2_5_fu_979_p2[ap_const_lv32_27 : ap_const_lv32_10]}};
        tmp_7_reg_1183 <= {{p_Val2_6_fu_986_p2[ap_const_lv32_1F : ap_const_lv32_10]}};
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st17_fsm_16) begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st17_fsm_16) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_212) begin
    if (ap_sig_bdd_212) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_223) begin
    if (ap_sig_bdd_223) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_234) begin
    if (ap_sig_bdd_234) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_587) begin
    if (ap_sig_bdd_587) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_35) begin
    if (ap_sig_bdd_35) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_93) begin
    if (ap_sig_bdd_93) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_106) begin
    if (ap_sig_bdd_106) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_123) begin
    if (ap_sig_bdd_123) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_142) begin
    if (ap_sig_bdd_142) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_153) begin
    if (ap_sig_bdd_153) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_180) begin
    if (ap_sig_bdd_180) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_192) begin
    if (ap_sig_bdd_192) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_203) begin
    if (ap_sig_bdd_203) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        hls_ref_4oPi_table_100_V_ce0 = ap_const_logic_1;
    end else begin
        hls_ref_4oPi_table_100_V_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st6_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        hls_sin_cos_K0_V_ce0 = ap_const_logic_1;
    end else begin
        hls_sin_cos_K0_V_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st6_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        hls_sin_cos_K1_V_ce0 = ap_const_logic_1;
    end else begin
        hls_sin_cos_K1_V_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st6_fsm_5) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        hls_sin_cos_K2_V_ce0 = ap_const_logic_1;
    end else begin
        hls_sin_cos_K2_V_ce0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_done or grp_sinGen_my_to_float_31_1_s_fu_228_ap_done) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_logic_0 == grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_done)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            if (~(ap_const_logic_0 == grp_sinGen_my_to_float_31_1_s_fu_228_ap_done)) begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end else begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign Ex_V_fu_467_p2 = (storemerge_i_fu_392_p3 - tmp_31_i_fu_463_p1);

assign Mx_zeros_V_fu_432_p1 = val_assign_fu_424_p3[4:0];

assign OP1_V_3_fu_803_p1 = tmp_1_reg_1113;

assign addr_V_fu_272_p3 = ((closepath_fu_260_p2[0:0] === 1'b1) ? ap_const_lv8_3F : p_op_i_fu_266_p2);

assign ap_return = ((tmp_16_fu_967_p2[0:0] === 1'b1) ? sel_tmp4_fu_960_p3 : sel_tmp2_fu_956_p1);


always @ (ap_CS_fsm) begin
    ap_sig_bdd_106 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_123 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_142 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_153 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_180 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_192 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_203 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_212 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_223 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_234 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_35 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_587 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_93 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

assign closepath_fu_260_p2 = (loc_V_fu_246_p4 < ap_const_lv8_7E? 1'b1: 1'b0);

assign cos_basis_fu_654_p0 = do_cos;

assign cos_basis_fu_654_p3 = ((cos_basis_fu_654_p0[0:0] === 1'b1) ? tmp_4_fu_619_p2 : tmp_s_fu_625_p10);

assign grp_fu_887_ce = ap_const_logic_1;

assign grp_fu_887_p1 = grp_fu_887_p10;

assign grp_fu_887_p10 = p_Mx_V_ret_reg_1123;

assign grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_a_V = Med_V_reg_1033;

assign grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_start = grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_start_ap_start_reg;

assign grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_b_V = p_Result_13_reg_1028;

assign grp_sinGen_my_to_float_31_1_s_fu_228_ap_start = grp_sinGen_my_to_float_31_1_s_fu_228_ap_start_ap_start_reg;

assign grp_sinGen_my_to_float_31_1_s_fu_228_in_V = p_0_reg_1203;

assign grp_sinGen_my_to_float_31_1_s_fu_228_prescale = r_V_1_reg_1208;

assign hls_ref_4oPi_table_100_V_address0 = tmp_5_i_i_fu_290_p1;

assign hls_sin_cos_K0_V_address0 = tmp_8_fu_696_p1;

assign hls_sin_cos_K1_V_address0 = tmp_8_fu_696_p1;

assign hls_sin_cos_K2_V_address0 = tmp_8_fu_696_p1;

assign loc_V_1_fu_256_p1 = p_Val2_28_fu_234_p1[22:0];

assign loc_V_fu_246_p4 = {{p_Val2_28_fu_234_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign not_do_cos_fu_662_p0 = do_cos;

assign not_do_cos_fu_662_p2 = (not_do_cos_fu_662_p0 ^ ap_const_lv1_1);

assign or_cond_fu_486_p2 = (tmp_14_fu_481_p2 & tmp_15_reg_1038);

assign p_Ex_V_ret_fu_682_p3 = ((cos_basis_fu_654_p3[0:0] === 1'b1) ? ap_const_lv8_0 : Ex_V_reg_1071);

assign p_Mx_V_ret_fu_689_p3 = ((cos_basis_fu_654_p3[0:0] === 1'b1) ? ap_const_lv31_7FFFFFFF : p_Val2_32_reg_1095);

assign p_Result_12_fu_925_p2 = (tmp_13_reg_1143 | p_Result_18_fu_917_p3);

assign p_Result_13_fu_299_p3 = {{ap_const_lv1_1}, {loc_V_1_reg_1006}};

assign p_Result_14_fu_399_p3 = {{p_Result_i2_i_reg_1056}, {ap_const_lv1_1}};


integer ap_tvar_int_0;

always @ (p_Result_14_fu_399_p3) begin
    for (ap_tvar_int_0 = 19 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > ap_const_lv32_12 - ap_const_lv32_0) begin
            p_Result_15_fu_406_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_15_fu_406_p4[ap_tvar_int_0] = p_Result_14_fu_399_p3[ap_const_lv32_12 - ap_tvar_int_0];
        end
    end
end



assign p_Result_16_fu_416_p3 = {{ap_const_lv13_1FFF}, {p_Result_15_fu_406_p4}};

assign p_Result_17_fu_674_p3 = {{sin_basis_fu_668_p2}, {p_Result_s_40_fu_568_p4}};

assign p_Result_18_fu_917_p3 = p_Val2_25_fu_914_p1[ap_const_lv32_1F];

assign p_Result_19_fu_703_p3 = {{p_Result_s_reg_993}, {p_Val2_31_reg_1044}};

assign p_Result_20_fu_930_p3 = {{p_Result_s_reg_993}, {ap_const_lv31_0}};

assign p_Result_21_fu_941_p3 = {{p_Result_12_fu_925_p2}, {tmp_25_fu_937_p1}};

assign p_Result_s_40_fu_568_p4 = {{p_Val2_0_i245_in_i_fu_561_p3[ap_const_lv32_1E : ap_const_lv32_18]}};

assign p_Val2_0_i245_in_i_fu_561_p3 = ((isNeg_reg_1077[0:0] === 1'b1) ? tmp_35_i_cast_fu_551_p1 : tmp_37_i_fu_555_p2);

assign p_Val2_14_fu_332_p4 = {{grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_return[ap_const_lv32_43 : ap_const_lv32_13]}};

assign p_Val2_19_fu_369_p3 = ((tmp_20_fu_359_p1[0:0] === 1'b1) ? p_Val2_i_fu_363_p2 : p_Val2_14_fu_332_p4);

assign p_Val2_22_fu_440_p2 = p_Val2_19_reg_1051 << tmp_28_i_fu_436_p1;

assign p_Val2_25_fu_914_p1 = resultf_reg_1213;

assign p_Val2_28_fu_234_p1 = t_in;

assign p_Val2_31_fu_352_p3 = ((closepath_reg_1012[0:0] === 1'b1) ? ap_const_lv3_0 : tmp_27_i_fu_342_p4);

assign p_Val2_32_fu_516_p2 = (p_Val2_23_reg_1061 + tmp_30_i_fu_513_p1);

assign p_Val2_3_fu_806_p0 = OP1_V_3_fu_803_p1;

assign p_Val2_3_fu_806_p1 = OP1_V_3_fu_803_p1;

assign p_Val2_3_fu_806_p2 = (p_Val2_3_fu_806_p0 * p_Val2_3_fu_806_p1);

assign p_Val2_5_fu_979_p1 = p_Val2_5_fu_979_p10;

assign p_Val2_5_fu_979_p10 = p_Val2_2_reg_1108;

assign p_Val2_6_fu_986_p0 = p_Val2_6_fu_986_p00;

assign p_Val2_6_fu_986_p00 = tmp_3_reg_1158;

assign p_Val2_7_fu_852_p3 = {{p_Val2_s_reg_1163}, {ap_const_lv1_0}};

assign p_Val2_8_fu_866_p2 = ($signed(tmp_9_fu_859_p1) + $signed(tmp_10_fu_863_p1));

assign p_Val2_i_fu_363_p2 = (ap_const_lv49_0 - p_Val2_14_fu_332_p4);

assign p_i_fu_387_p2 = ($signed(ap_const_lv8_83) + $signed(loc_V_reg_999));

assign p_op_i_fu_266_p2 = ($signed(ap_const_lv8_C2) + $signed(loc_V_fu_246_p4));

assign r_V_1_fu_907_p2 = ($signed(ap_const_lv9_0) - $signed(rhs_V_fu_904_p1));

assign r_V_3_fu_310_p2 = hls_ref_4oPi_table_100_V_q0 << tmp_7_i_i_fu_307_p1;

assign r_V_fu_875_p2 = ($signed(p_Val2_8_fu_866_p2) + $signed(tmp_18_cast_fu_872_p1));

assign rhs_V_fu_904_p1 = $signed(p_Ex_V_ret_reg_1118);

assign sel_tmp1_fu_793_p2 = (or_cond_reg_1083 & not_do_cos_fu_662_p2);

assign sel_tmp2_fu_956_p1 = sel_tmp2_v_fu_949_p3;

assign sel_tmp2_v_fu_949_p3 = ((sel_tmp1_reg_1148[0:0] === 1'b1) ? p_Result_20_fu_930_p3 : p_Result_21_fu_941_p3);

assign sel_tmp3_fu_798_p1 = do_cos;

assign sel_tmp3_fu_798_p2 = (or_cond_reg_1083 & sel_tmp3_fu_798_p1);

assign sel_tmp4_fu_960_p3 = ((sel_tmp6_reg_1089[0:0] === 1'b1) ? ap_const_lv32_7FFFFFFF : ap_const_lv32_3F800000);

assign sel_tmp5_demorgan_fu_496_p2 = (tmp_14_fu_481_p2 & tmp_15_reg_1038);

assign sel_tmp5_fu_501_p2 = (sel_tmp5_demorgan_fu_496_p2 ^ ap_const_lv1_1);

assign sel_tmp6_fu_507_p2 = (tmp_i_fu_491_p2 & sel_tmp5_fu_501_p2);

assign sh_assign_1_i_cast8_fu_537_p1 = $signed(sh_assign_reg_1102);

assign sh_assign_1_i_cast_fu_540_p1 = $signed(sh_assign_reg_1102);

assign sh_assign_fu_530_p3 = ((isNeg_reg_1077[0:0] === 1'b1) ? tmp_33_i_fu_524_p2 : sh_i_cast_fu_521_p1);

assign sh_i_cast_fu_521_p1 = $signed(Ex_V_reg_1071);

assign sin_basis_fu_668_p2 = (tmp_6_fu_646_p3 ^ not_do_cos_fu_662_p2);

assign storemerge_i_fu_392_p3 = ((closepath_reg_1012[0:0] === 1'b1) ? p_i_fu_387_p2 : ap_const_lv8_0);

assign tmp_10_fu_863_p1 = $signed(tmp_5_reg_1178);

assign tmp_13_fu_785_p3 = ((cos_basis_fu_654_p3[0:0] === 1'b1) ? tmp_11_fu_709_p18 : tmp_12_fu_747_p18);

assign tmp_14_fu_481_p2 = (loc_V_reg_999 == ap_const_lv8_0? 1'b1: 1'b0);

assign tmp_15_fu_327_p2 = (loc_V_1_reg_1006 == ap_const_lv23_0? 1'b1: 1'b0);

assign tmp_16_fu_967_p2 = (sel_tmp6_reg_1089 | sel_tmp3_reg_1153);

assign tmp_18_cast_fu_872_p1 = $signed(tmp_7_reg_1183);

assign tmp_19_fu_295_p1 = addr_V_fu_272_p3[3:0];

assign tmp_20_fu_359_p1 = p_Val2_31_fu_352_p3[0:0];

assign tmp_25_fu_937_p1 = p_Val2_25_fu_914_p1[30:0];

assign tmp_27_i_fu_342_p4 = {{grp_sinGen_big_mult_v3small_71_24_17_s_fu_222_ap_return[ap_const_lv32_46 : ap_const_lv32_44]}};

assign tmp_28_i_fu_436_p1 = Mx_zeros_V_fu_432_p1;

assign tmp_2_fu_280_p4 = {{addr_V_fu_272_p3[ap_const_lv32_7 : ap_const_lv32_4]}};

assign tmp_30_i_fu_513_p1 = tmp_22_reg_1066;

assign tmp_31_i_fu_463_p1 = Mx_zeros_V_fu_432_p1;

assign tmp_33_i_fu_524_p2 = ($signed(ap_const_lv9_0) - $signed(sh_i_cast_fu_521_p1));

assign tmp_34_i_fu_543_p1 = p_Val2_32_reg_1095;

assign tmp_35_i_cast_fu_551_p1 = tmp_35_i_fu_546_p2;

assign tmp_35_i_fu_546_p2 = p_Val2_32_reg_1095 >> sh_assign_1_i_cast_fu_540_p1;

assign tmp_37_i_fu_555_p2 = tmp_34_i_fu_543_p1 << sh_assign_1_i_cast8_fu_537_p1;

assign tmp_4_fu_619_p2 = (tmp_fu_598_p10 ^ ap_const_lv1_1);

assign tmp_5_i_i_fu_290_p1 = tmp_2_fu_280_p4;

assign tmp_6_fu_646_p0 = do_cos;

assign tmp_6_fu_646_p3 = ((tmp_6_fu_646_p0[0:0] === 1'b1) ? tmp_fu_598_p10 : tmp_s_fu_625_p10);

assign tmp_7_i_i_fu_307_p1 = tmp_19_reg_1023;

assign tmp_8_fu_696_p1 = p_Result_17_fu_674_p3;

assign tmp_9_fu_859_p1 = $signed(p_Val2_7_fu_852_p3);

assign tmp_i_fu_491_p2 = (loc_V_reg_999 == ap_const_lv8_FF? 1'b1: 1'b0);


always @ (p_Result_16_fu_416_p3) begin
    if (p_Result_16_fu_416_p3[0] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd0;
    end else if (p_Result_16_fu_416_p3[1] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd1;
    end else if (p_Result_16_fu_416_p3[2] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd2;
    end else if (p_Result_16_fu_416_p3[3] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd3;
    end else if (p_Result_16_fu_416_p3[4] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd4;
    end else if (p_Result_16_fu_416_p3[5] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd5;
    end else if (p_Result_16_fu_416_p3[6] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd6;
    end else if (p_Result_16_fu_416_p3[7] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd7;
    end else if (p_Result_16_fu_416_p3[8] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd8;
    end else if (p_Result_16_fu_416_p3[9] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd9;
    end else if (p_Result_16_fu_416_p3[10] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd10;
    end else if (p_Result_16_fu_416_p3[11] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd11;
    end else if (p_Result_16_fu_416_p3[12] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd12;
    end else if (p_Result_16_fu_416_p3[13] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd13;
    end else if (p_Result_16_fu_416_p3[14] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd14;
    end else if (p_Result_16_fu_416_p3[15] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd15;
    end else if (p_Result_16_fu_416_p3[16] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd16;
    end else if (p_Result_16_fu_416_p3[17] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd17;
    end else if (p_Result_16_fu_416_p3[18] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd18;
    end else if (p_Result_16_fu_416_p3[19] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd19;
    end else if (p_Result_16_fu_416_p3[20] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd20;
    end else if (p_Result_16_fu_416_p3[21] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd21;
    end else if (p_Result_16_fu_416_p3[22] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd22;
    end else if (p_Result_16_fu_416_p3[23] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd23;
    end else if (p_Result_16_fu_416_p3[24] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd24;
    end else if (p_Result_16_fu_416_p3[25] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd25;
    end else if (p_Result_16_fu_416_p3[26] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd26;
    end else if (p_Result_16_fu_416_p3[27] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd27;
    end else if (p_Result_16_fu_416_p3[28] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd28;
    end else if (p_Result_16_fu_416_p3[29] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd29;
    end else if (p_Result_16_fu_416_p3[30] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd30;
    end else if (p_Result_16_fu_416_p3[31] == 1'b1) begin
        val_assign_fu_424_p3 = 32'd31;
    end else begin
        val_assign_fu_424_p3 = 32'd32;
    end
end


always @ (posedge ap_clk) begin
    p_Result_13_reg_1028[23] <= 1'b1;
end



endmodule //sinGen_sinf_or_cosf

