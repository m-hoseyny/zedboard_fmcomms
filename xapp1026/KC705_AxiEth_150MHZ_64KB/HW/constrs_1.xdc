
####################################################################################
# Generated by Vivado 2014.3 built on 'Mon Sep 15 19:04:16 MDT 2014' by 'xbuild'
# Command Used: write_xdc -force C:/PROJECT_FOR_RELEASE/KC705_150MHZ_32KB/project_150MHz/constrs_1.xdc
####################################################################################

create_property BOARD_PART_PIN port -type string

####################################################################################
# Constraints from file : 'mb_subsystem_microblaze_0_0.xdc'
####################################################################################

current_instance mb_subsystem_i/microblaze_0/U0
set_false_path -to [get_pins MicroBlaze_Core_I/reset_temp_reg*/D]


####################################################################################
# Constraints from file : 'mb_subsystem_mig_7series_0_0.xdc'
####################################################################################

##################################################################################################
##
##  Xilinx, Inc. 2010            www.xilinx.com
##  Mon Sep 22 15:37:56 2014
##  Generated by MIG Version 2.2
##
##################################################################################################
##  File name :       mb_subsystem_mig_7series_0_0.xdc
##  Details :     Constraints file
##                    FPGA Family:       KINTEX7
##                    FPGA Part:         XC7K325T-FFG900
##                    Speedgrade:        -2
##                    Design Entry:      VERILOG
##                    Frequency:         0 MHz
##                    Time Period:       1665 ps
##################################################################################################

##################################################################################################
## Controller 0
## Memory Device: DDR3_SDRAM->SODIMMs->MT8JTF12864HZ-1G6
## Data Width: 64
## Time Period: 1665
## Data Mask: 1
##################################################################################################

current_instance -quiet
create_clock -period 4.995 -name sys_clk [get_ports sys_clk_p]
#set_propagated_clock sys_clk_p

############## NET - IOSTANDARD ##################


# PadFunction: IO_L20P_T3_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[0]}]
set_property SLEW FAST [get_ports {DDR3_dq[0]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[0]}]
set_property PACKAGE_PIN AA15 [get_ports {DDR3_dq[0]}]

# PadFunction: IO_L23N_T3_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[1]}]
set_property SLEW FAST [get_ports {DDR3_dq[1]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[1]}]
set_property PACKAGE_PIN AA16 [get_ports {DDR3_dq[1]}]

# PadFunction: IO_L22P_T3_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[2]}]
set_property SLEW FAST [get_ports {DDR3_dq[2]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[2]}]
set_property PACKAGE_PIN AC14 [get_ports {DDR3_dq[2]}]

# PadFunction: IO_L22N_T3_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[3]}]
set_property SLEW FAST [get_ports {DDR3_dq[3]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[3]}]
set_property PACKAGE_PIN AD14 [get_ports {DDR3_dq[3]}]

# PadFunction: IO_L23P_T3_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[4]}]
set_property SLEW FAST [get_ports {DDR3_dq[4]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[4]}]
set_property PACKAGE_PIN AA17 [get_ports {DDR3_dq[4]}]

# PadFunction: IO_L20N_T3_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[5]}]
set_property SLEW FAST [get_ports {DDR3_dq[5]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[5]}]
set_property PACKAGE_PIN AB15 [get_ports {DDR3_dq[5]}]

# PadFunction: IO_L19P_T3_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[6]}]
set_property SLEW FAST [get_ports {DDR3_dq[6]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[6]}]
set_property PACKAGE_PIN AE15 [get_ports {DDR3_dq[6]}]

# PadFunction: IO_L24N_T3_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[7]}]
set_property SLEW FAST [get_ports {DDR3_dq[7]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[7]}]
set_property PACKAGE_PIN Y15 [get_ports {DDR3_dq[7]}]

# PadFunction: IO_L17P_T2_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[8]}]
set_property SLEW FAST [get_ports {DDR3_dq[8]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[8]}]
set_property PACKAGE_PIN AB19 [get_ports {DDR3_dq[8]}]

# PadFunction: IO_L14N_T2_SRCC_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[9]}]
set_property SLEW FAST [get_ports {DDR3_dq[9]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[9]}]
set_property PACKAGE_PIN AD16 [get_ports {DDR3_dq[9]}]

# PadFunction: IO_L17N_T2_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[10]}]
set_property SLEW FAST [get_ports {DDR3_dq[10]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[10]}]
set_property PACKAGE_PIN AC19 [get_ports {DDR3_dq[10]}]

# PadFunction: IO_L14P_T2_SRCC_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[11]}]
set_property SLEW FAST [get_ports {DDR3_dq[11]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[11]}]
set_property PACKAGE_PIN AD17 [get_ports {DDR3_dq[11]}]

# PadFunction: IO_L16P_T2_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[12]}]
set_property SLEW FAST [get_ports {DDR3_dq[12]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[12]}]
set_property PACKAGE_PIN AA18 [get_ports {DDR3_dq[12]}]

# PadFunction: IO_L16N_T2_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[13]}]
set_property SLEW FAST [get_ports {DDR3_dq[13]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[13]}]
set_property PACKAGE_PIN AB18 [get_ports {DDR3_dq[13]}]

# PadFunction: IO_L13N_T2_MRCC_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[14]}]
set_property SLEW FAST [get_ports {DDR3_dq[14]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[14]}]
set_property PACKAGE_PIN AE18 [get_ports {DDR3_dq[14]}]

# PadFunction: IO_L13P_T2_MRCC_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[15]}]
set_property SLEW FAST [get_ports {DDR3_dq[15]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[15]}]
set_property PACKAGE_PIN AD18 [get_ports {DDR3_dq[15]}]

# PadFunction: IO_L8P_T1_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[16]}]
set_property SLEW FAST [get_ports {DDR3_dq[16]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[16]}]
set_property PACKAGE_PIN AG19 [get_ports {DDR3_dq[16]}]

# PadFunction: IO_L7N_T1_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[17]}]
set_property SLEW FAST [get_ports {DDR3_dq[17]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[17]}]
set_property PACKAGE_PIN AK19 [get_ports {DDR3_dq[17]}]

# PadFunction: IO_L11N_T1_SRCC_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[18]}]
set_property SLEW FAST [get_ports {DDR3_dq[18]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[18]}]
set_property PACKAGE_PIN AG18 [get_ports {DDR3_dq[18]}]

# PadFunction: IO_L11P_T1_SRCC_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[19]}]
set_property SLEW FAST [get_ports {DDR3_dq[19]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[19]}]
set_property PACKAGE_PIN AF18 [get_ports {DDR3_dq[19]}]

# PadFunction: IO_L8N_T1_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[20]}]
set_property SLEW FAST [get_ports {DDR3_dq[20]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[20]}]
set_property PACKAGE_PIN AH19 [get_ports {DDR3_dq[20]}]

# PadFunction: IO_L7P_T1_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[21]}]
set_property SLEW FAST [get_ports {DDR3_dq[21]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[21]}]
set_property PACKAGE_PIN AJ19 [get_ports {DDR3_dq[21]}]

# PadFunction: IO_L10N_T1_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[22]}]
set_property SLEW FAST [get_ports {DDR3_dq[22]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[22]}]
set_property PACKAGE_PIN AE19 [get_ports {DDR3_dq[22]}]

# PadFunction: IO_L10P_T1_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[23]}]
set_property SLEW FAST [get_ports {DDR3_dq[23]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[23]}]
set_property PACKAGE_PIN AD19 [get_ports {DDR3_dq[23]}]

# PadFunction: IO_L1P_T0_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[24]}]
set_property SLEW FAST [get_ports {DDR3_dq[24]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[24]}]
set_property PACKAGE_PIN AK16 [get_ports {DDR3_dq[24]}]

# PadFunction: IO_L5N_T0_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[25]}]
set_property SLEW FAST [get_ports {DDR3_dq[25]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[25]}]
set_property PACKAGE_PIN AJ17 [get_ports {DDR3_dq[25]}]

# PadFunction: IO_L2P_T0_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[26]}]
set_property SLEW FAST [get_ports {DDR3_dq[26]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[26]}]
set_property PACKAGE_PIN AG15 [get_ports {DDR3_dq[26]}]

# PadFunction: IO_L4P_T0_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[27]}]
set_property SLEW FAST [get_ports {DDR3_dq[27]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[27]}]
set_property PACKAGE_PIN AF15 [get_ports {DDR3_dq[27]}]

# PadFunction: IO_L5P_T0_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[28]}]
set_property SLEW FAST [get_ports {DDR3_dq[28]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[28]}]
set_property PACKAGE_PIN AH17 [get_ports {DDR3_dq[28]}]

# PadFunction: IO_L4N_T0_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[29]}]
set_property SLEW FAST [get_ports {DDR3_dq[29]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[29]}]
set_property PACKAGE_PIN AG14 [get_ports {DDR3_dq[29]}]

# PadFunction: IO_L2N_T0_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[30]}]
set_property SLEW FAST [get_ports {DDR3_dq[30]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[30]}]
set_property PACKAGE_PIN AH15 [get_ports {DDR3_dq[30]}]

# PadFunction: IO_L1N_T0_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[31]}]
set_property SLEW FAST [get_ports {DDR3_dq[31]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[31]}]
set_property PACKAGE_PIN AK15 [get_ports {DDR3_dq[31]}]

# PadFunction: IO_L23N_T3_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[32]}]
set_property SLEW FAST [get_ports {DDR3_dq[32]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[32]}]
set_property PACKAGE_PIN AK8 [get_ports {DDR3_dq[32]}]

# PadFunction: IO_L22N_T3_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[33]}]
set_property SLEW FAST [get_ports {DDR3_dq[33]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[33]}]
set_property PACKAGE_PIN AK6 [get_ports {DDR3_dq[33]}]

# PadFunction: IO_L20N_T3_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[34]}]
set_property SLEW FAST [get_ports {DDR3_dq[34]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[34]}]
set_property PACKAGE_PIN AG7 [get_ports {DDR3_dq[34]}]

# PadFunction: IO_L20P_T3_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[35]}]
set_property SLEW FAST [get_ports {DDR3_dq[35]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[35]}]
set_property PACKAGE_PIN AF7 [get_ports {DDR3_dq[35]}]

# PadFunction: IO_L19P_T3_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[36]}]
set_property SLEW FAST [get_ports {DDR3_dq[36]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[36]}]
set_property PACKAGE_PIN AF8 [get_ports {DDR3_dq[36]}]

# PadFunction: IO_L24N_T3_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[37]}]
set_property SLEW FAST [get_ports {DDR3_dq[37]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[37]}]
set_property PACKAGE_PIN AK4 [get_ports {DDR3_dq[37]}]

# PadFunction: IO_L23P_T3_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[38]}]
set_property SLEW FAST [get_ports {DDR3_dq[38]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[38]}]
set_property PACKAGE_PIN AJ8 [get_ports {DDR3_dq[38]}]

# PadFunction: IO_L22P_T3_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[39]}]
set_property SLEW FAST [get_ports {DDR3_dq[39]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[39]}]
set_property PACKAGE_PIN AJ6 [get_ports {DDR3_dq[39]}]

# PadFunction: IO_L14N_T2_SRCC_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[40]}]
set_property SLEW FAST [get_ports {DDR3_dq[40]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[40]}]
set_property PACKAGE_PIN AH5 [get_ports {DDR3_dq[40]}]

# PadFunction: IO_L14P_T2_SRCC_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[41]}]
set_property SLEW FAST [get_ports {DDR3_dq[41]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[41]}]
set_property PACKAGE_PIN AH6 [get_ports {DDR3_dq[41]}]

# PadFunction: IO_L16N_T2_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[42]}]
set_property SLEW FAST [get_ports {DDR3_dq[42]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[42]}]
set_property PACKAGE_PIN AJ2 [get_ports {DDR3_dq[42]}]

# PadFunction: IO_L16P_T2_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[43]}]
set_property SLEW FAST [get_ports {DDR3_dq[43]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[43]}]
set_property PACKAGE_PIN AH2 [get_ports {DDR3_dq[43]}]

# PadFunction: IO_L13P_T2_MRCC_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[44]}]
set_property SLEW FAST [get_ports {DDR3_dq[44]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[44]}]
set_property PACKAGE_PIN AH4 [get_ports {DDR3_dq[44]}]

# PadFunction: IO_L13N_T2_MRCC_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[45]}]
set_property SLEW FAST [get_ports {DDR3_dq[45]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[45]}]
set_property PACKAGE_PIN AJ4 [get_ports {DDR3_dq[45]}]

# PadFunction: IO_L17N_T2_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[46]}]
set_property SLEW FAST [get_ports {DDR3_dq[46]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[46]}]
set_property PACKAGE_PIN AK1 [get_ports {DDR3_dq[46]}]

# PadFunction: IO_L17P_T2_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[47]}]
set_property SLEW FAST [get_ports {DDR3_dq[47]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[47]}]
set_property PACKAGE_PIN AJ1 [get_ports {DDR3_dq[47]}]

# PadFunction: IO_L8N_T1_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[48]}]
set_property SLEW FAST [get_ports {DDR3_dq[48]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[48]}]
set_property PACKAGE_PIN AF1 [get_ports {DDR3_dq[48]}]

# PadFunction: IO_L7N_T1_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[49]}]
set_property SLEW FAST [get_ports {DDR3_dq[49]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[49]}]
set_property PACKAGE_PIN AF2 [get_ports {DDR3_dq[49]}]

# PadFunction: IO_L10P_T1_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[50]}]
set_property SLEW FAST [get_ports {DDR3_dq[50]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[50]}]
set_property PACKAGE_PIN AE4 [get_ports {DDR3_dq[50]}]

# PadFunction: IO_L10N_T1_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[51]}]
set_property SLEW FAST [get_ports {DDR3_dq[51]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[51]}]
set_property PACKAGE_PIN AE3 [get_ports {DDR3_dq[51]}]

# PadFunction: IO_L7P_T1_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[52]}]
set_property SLEW FAST [get_ports {DDR3_dq[52]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[52]}]
set_property PACKAGE_PIN AF3 [get_ports {DDR3_dq[52]}]

# PadFunction: IO_L11N_T1_SRCC_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[53]}]
set_property SLEW FAST [get_ports {DDR3_dq[53]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[53]}]
set_property PACKAGE_PIN AF5 [get_ports {DDR3_dq[53]}]

# PadFunction: IO_L8P_T1_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[54]}]
set_property SLEW FAST [get_ports {DDR3_dq[54]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[54]}]
set_property PACKAGE_PIN AE1 [get_ports {DDR3_dq[54]}]

# PadFunction: IO_L11P_T1_SRCC_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[55]}]
set_property SLEW FAST [get_ports {DDR3_dq[55]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[55]}]
set_property PACKAGE_PIN AE5 [get_ports {DDR3_dq[55]}]

# PadFunction: IO_L2N_T0_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[56]}]
set_property SLEW FAST [get_ports {DDR3_dq[56]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[56]}]
set_property PACKAGE_PIN AC1 [get_ports {DDR3_dq[56]}]

# PadFunction: IO_L1N_T0_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[57]}]
set_property SLEW FAST [get_ports {DDR3_dq[57]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[57]}]
set_property PACKAGE_PIN AD3 [get_ports {DDR3_dq[57]}]

# PadFunction: IO_L4N_T0_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[58]}]
set_property SLEW FAST [get_ports {DDR3_dq[58]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[58]}]
set_property PACKAGE_PIN AC4 [get_ports {DDR3_dq[58]}]

# PadFunction: IO_L4P_T0_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[59]}]
set_property SLEW FAST [get_ports {DDR3_dq[59]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[59]}]
set_property PACKAGE_PIN AC5 [get_ports {DDR3_dq[59]}]

# PadFunction: IO_L5N_T0_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[60]}]
set_property SLEW FAST [get_ports {DDR3_dq[60]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[60]}]
set_property PACKAGE_PIN AE6 [get_ports {DDR3_dq[60]}]

# PadFunction: IO_L5P_T0_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[61]}]
set_property SLEW FAST [get_ports {DDR3_dq[61]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[61]}]
set_property PACKAGE_PIN AD6 [get_ports {DDR3_dq[61]}]

# PadFunction: IO_L2P_T0_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[62]}]
set_property SLEW FAST [get_ports {DDR3_dq[62]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[62]}]
set_property PACKAGE_PIN AC2 [get_ports {DDR3_dq[62]}]

# PadFunction: IO_L1P_T0_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dq[63]}]
set_property SLEW FAST [get_ports {DDR3_dq[63]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR3_dq[63]}]
set_property PACKAGE_PIN AD4 [get_ports {DDR3_dq[63]}]

# PadFunction: IO_L18P_T2_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_addr[13]}]
set_property SLEW FAST [get_ports {DDR3_addr[13]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_addr[13]}]
set_property PACKAGE_PIN AH11 [get_ports {DDR3_addr[13]}]

# PadFunction: IO_L18N_T2_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_addr[12]}]
set_property SLEW FAST [get_ports {DDR3_addr[12]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_addr[12]}]
set_property PACKAGE_PIN AJ11 [get_ports {DDR3_addr[12]}]

# PadFunction: IO_L19P_T3_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_addr[11]}]
set_property SLEW FAST [get_ports {DDR3_addr[11]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_addr[11]}]
set_property PACKAGE_PIN AE13 [get_ports {DDR3_addr[11]}]

# PadFunction: IO_L19N_T3_VREF_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_addr[10]}]
set_property SLEW FAST [get_ports {DDR3_addr[10]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_addr[10]}]
set_property PACKAGE_PIN AF13 [get_ports {DDR3_addr[10]}]

# PadFunction: IO_L20P_T3_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_addr[9]}]
set_property SLEW FAST [get_ports {DDR3_addr[9]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_addr[9]}]
set_property PACKAGE_PIN AK14 [get_ports {DDR3_addr[9]}]

# PadFunction: IO_L20N_T3_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_addr[8]}]
set_property SLEW FAST [get_ports {DDR3_addr[8]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_addr[8]}]
set_property PACKAGE_PIN AK13 [get_ports {DDR3_addr[8]}]

# PadFunction: IO_L21P_T3_DQS_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_addr[7]}]
set_property SLEW FAST [get_ports {DDR3_addr[7]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_addr[7]}]
set_property PACKAGE_PIN AH14 [get_ports {DDR3_addr[7]}]

# PadFunction: IO_L21N_T3_DQS_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_addr[6]}]
set_property SLEW FAST [get_ports {DDR3_addr[6]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_addr[6]}]
set_property PACKAGE_PIN AJ14 [get_ports {DDR3_addr[6]}]

# PadFunction: IO_L22P_T3_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_addr[5]}]
set_property SLEW FAST [get_ports {DDR3_addr[5]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_addr[5]}]
set_property PACKAGE_PIN AJ13 [get_ports {DDR3_addr[5]}]

# PadFunction: IO_L22N_T3_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_addr[4]}]
set_property SLEW FAST [get_ports {DDR3_addr[4]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_addr[4]}]
set_property PACKAGE_PIN AJ12 [get_ports {DDR3_addr[4]}]

# PadFunction: IO_L23P_T3_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_addr[3]}]
set_property SLEW FAST [get_ports {DDR3_addr[3]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_addr[3]}]
set_property PACKAGE_PIN AF12 [get_ports {DDR3_addr[3]}]

# PadFunction: IO_L23N_T3_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_addr[2]}]
set_property SLEW FAST [get_ports {DDR3_addr[2]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_addr[2]}]
set_property PACKAGE_PIN AG12 [get_ports {DDR3_addr[2]}]

# PadFunction: IO_L24P_T3_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_addr[1]}]
set_property SLEW FAST [get_ports {DDR3_addr[1]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_addr[1]}]
set_property PACKAGE_PIN AG13 [get_ports {DDR3_addr[1]}]

# PadFunction: IO_L24N_T3_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_addr[0]}]
set_property SLEW FAST [get_ports {DDR3_addr[0]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_addr[0]}]
set_property PACKAGE_PIN AH12 [get_ports {DDR3_addr[0]}]

# PadFunction: IO_L15N_T2_DQS_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_ba[2]}]
set_property SLEW FAST [get_ports {DDR3_ba[2]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_ba[2]}]
set_property PACKAGE_PIN AK9 [get_ports {DDR3_ba[2]}]

# PadFunction: IO_L16P_T2_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_ba[1]}]
set_property SLEW FAST [get_ports {DDR3_ba[1]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_ba[1]}]
set_property PACKAGE_PIN AG9 [get_ports {DDR3_ba[1]}]

# PadFunction: IO_L16N_T2_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_ba[0]}]
set_property SLEW FAST [get_ports {DDR3_ba[0]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_ba[0]}]
set_property PACKAGE_PIN AH9 [get_ports {DDR3_ba[0]}]

# PadFunction: IO_L10P_T1_33
set_property VCCAUX_IO NORMAL [get_ports DDR3_ras_n]
set_property SLEW FAST [get_ports DDR3_ras_n]
set_property IOSTANDARD SSTL15 [get_ports DDR3_ras_n]
set_property PACKAGE_PIN AD9 [get_ports DDR3_ras_n]

# PadFunction: IO_L9N_T1_DQS_33
set_property VCCAUX_IO NORMAL [get_ports DDR3_cas_n]
set_property SLEW FAST [get_ports DDR3_cas_n]
set_property IOSTANDARD SSTL15 [get_ports DDR3_cas_n]
set_property PACKAGE_PIN AC11 [get_ports DDR3_cas_n]

# PadFunction: IO_L10N_T1_33
set_property VCCAUX_IO NORMAL [get_ports DDR3_we_n]
set_property SLEW FAST [get_ports DDR3_we_n]
set_property IOSTANDARD SSTL15 [get_ports DDR3_we_n]
set_property PACKAGE_PIN AE9 [get_ports DDR3_we_n]

# PadFunction: IO_L18N_T2_34
set_property VCCAUX_IO NORMAL [get_ports DDR3_reset_n]
set_property SLEW FAST [get_ports DDR3_reset_n]
set_property IOSTANDARD LVCMOS15 [get_ports DDR3_reset_n]
set_property PACKAGE_PIN AK3 [get_ports DDR3_reset_n]

# PadFunction: IO_L14N_T2_SRCC_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_cke[0]}]
set_property SLEW FAST [get_ports {DDR3_cke[0]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_cke[0]}]
set_property PACKAGE_PIN AF10 [get_ports {DDR3_cke[0]}]

# PadFunction: IO_L8P_T1_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_odt[0]}]
set_property SLEW FAST [get_ports {DDR3_odt[0]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_odt[0]}]
set_property PACKAGE_PIN AD8 [get_ports {DDR3_odt[0]}]

# PadFunction: IO_L9P_T1_DQS_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_cs_n[0]}]
set_property SLEW FAST [get_ports {DDR3_cs_n[0]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_cs_n[0]}]
set_property PACKAGE_PIN AC12 [get_ports {DDR3_cs_n[0]}]

# PadFunction: IO_L24P_T3_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dm[0]}]
set_property SLEW FAST [get_ports {DDR3_dm[0]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_dm[0]}]
set_property PACKAGE_PIN Y16 [get_ports {DDR3_dm[0]}]

# PadFunction: IO_L18P_T2_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dm[1]}]
set_property SLEW FAST [get_ports {DDR3_dm[1]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_dm[1]}]
set_property PACKAGE_PIN AB17 [get_ports {DDR3_dm[1]}]

# PadFunction: IO_L12P_T1_MRCC_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dm[2]}]
set_property SLEW FAST [get_ports {DDR3_dm[2]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_dm[2]}]
set_property PACKAGE_PIN AF17 [get_ports {DDR3_dm[2]}]

# PadFunction: IO_L6P_T0_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dm[3]}]
set_property SLEW FAST [get_ports {DDR3_dm[3]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_dm[3]}]
set_property PACKAGE_PIN AE16 [get_ports {DDR3_dm[3]}]

# PadFunction: IO_L24P_T3_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dm[4]}]
set_property SLEW FAST [get_ports {DDR3_dm[4]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_dm[4]}]
set_property PACKAGE_PIN AK5 [get_ports {DDR3_dm[4]}]

# PadFunction: IO_L18P_T2_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dm[5]}]
set_property SLEW FAST [get_ports {DDR3_dm[5]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_dm[5]}]
set_property PACKAGE_PIN AJ3 [get_ports {DDR3_dm[5]}]

# PadFunction: IO_L12P_T1_MRCC_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dm[6]}]
set_property SLEW FAST [get_ports {DDR3_dm[6]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_dm[6]}]
set_property PACKAGE_PIN AF6 [get_ports {DDR3_dm[6]}]

# PadFunction: IO_L6P_T0_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dm[7]}]
set_property SLEW FAST [get_ports {DDR3_dm[7]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR3_dm[7]}]
set_property PACKAGE_PIN AC7 [get_ports {DDR3_dm[7]}]

# PadFunction: IO_L12P_T1_MRCC_33
set_property VCCAUX_IO DONTCARE [get_ports sys_clk_p]

# PadFunction: IO_L12N_T1_MRCC_33

# PadFunction: IO_L21P_T3_DQS_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dqs_p[0]}]
set_property SLEW FAST [get_ports {DDR3_dqs_p[0]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR3_dqs_p[0]}]

# PadFunction: IO_L21N_T3_DQS_32
set_property SLEW FAST [get_ports {DDR3_dqs_n[0]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR3_dqs_n[0]}]
set_property PACKAGE_PIN AC15 [get_ports {DDR3_dqs_n[0]}]

# PadFunction: IO_L15P_T2_DQS_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dqs_p[1]}]
set_property SLEW FAST [get_ports {DDR3_dqs_p[1]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR3_dqs_p[1]}]

# PadFunction: IO_L15N_T2_DQS_32
set_property SLEW FAST [get_ports {DDR3_dqs_n[1]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR3_dqs_n[1]}]
set_property PACKAGE_PIN Y18 [get_ports {DDR3_dqs_n[1]}]

# PadFunction: IO_L9P_T1_DQS_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dqs_p[2]}]
set_property SLEW FAST [get_ports {DDR3_dqs_p[2]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR3_dqs_p[2]}]

# PadFunction: IO_L9N_T1_DQS_32
set_property SLEW FAST [get_ports {DDR3_dqs_n[2]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR3_dqs_n[2]}]
set_property PACKAGE_PIN AK18 [get_ports {DDR3_dqs_n[2]}]

# PadFunction: IO_L3P_T0_DQS_32
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dqs_p[3]}]
set_property SLEW FAST [get_ports {DDR3_dqs_p[3]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR3_dqs_p[3]}]

# PadFunction: IO_L3N_T0_DQS_32
set_property SLEW FAST [get_ports {DDR3_dqs_n[3]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR3_dqs_n[3]}]
set_property PACKAGE_PIN AJ16 [get_ports {DDR3_dqs_n[3]}]

# PadFunction: IO_L21P_T3_DQS_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dqs_p[4]}]
set_property SLEW FAST [get_ports {DDR3_dqs_p[4]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR3_dqs_p[4]}]

# PadFunction: IO_L21N_T3_DQS_34
set_property SLEW FAST [get_ports {DDR3_dqs_n[4]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR3_dqs_n[4]}]
set_property PACKAGE_PIN AJ7 [get_ports {DDR3_dqs_n[4]}]

# PadFunction: IO_L15P_T2_DQS_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dqs_p[5]}]
set_property SLEW FAST [get_ports {DDR3_dqs_p[5]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR3_dqs_p[5]}]

# PadFunction: IO_L15N_T2_DQS_34
set_property SLEW FAST [get_ports {DDR3_dqs_n[5]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR3_dqs_n[5]}]
set_property PACKAGE_PIN AH1 [get_ports {DDR3_dqs_n[5]}]

# PadFunction: IO_L9P_T1_DQS_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dqs_p[6]}]
set_property SLEW FAST [get_ports {DDR3_dqs_p[6]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR3_dqs_p[6]}]

# PadFunction: IO_L9N_T1_DQS_34
set_property SLEW FAST [get_ports {DDR3_dqs_n[6]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR3_dqs_n[6]}]
set_property PACKAGE_PIN AG3 [get_ports {DDR3_dqs_n[6]}]

# PadFunction: IO_L3P_T0_DQS_34
set_property VCCAUX_IO NORMAL [get_ports {DDR3_dqs_p[7]}]
set_property SLEW FAST [get_ports {DDR3_dqs_p[7]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR3_dqs_p[7]}]

# PadFunction: IO_L3N_T0_DQS_34
set_property SLEW FAST [get_ports {DDR3_dqs_n[7]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR3_dqs_n[7]}]
set_property PACKAGE_PIN AD1 [get_ports {DDR3_dqs_n[7]}]

# PadFunction: IO_L13P_T2_MRCC_33
set_property VCCAUX_IO NORMAL [get_ports {DDR3_ck_p[0]}]
set_property SLEW FAST [get_ports {DDR3_ck_p[0]}]
set_property IOSTANDARD DIFF_SSTL15 [get_ports {DDR3_ck_p[0]}]

# PadFunction: IO_L13N_T2_MRCC_33
set_property SLEW FAST [get_ports {DDR3_ck_n[0]}]
set_property IOSTANDARD DIFF_SSTL15 [get_ports {DDR3_ck_n[0]}]
set_property PACKAGE_PIN AH10 [get_ports {DDR3_ck_n[0]}]



set_property LOC PHASER_OUT_PHY_X1Y3 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_D.ddr_byte_lane_D/phaser_out]
set_property LOC PHASER_OUT_PHY_X1Y2 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_C.ddr_byte_lane_C/phaser_out]
set_property LOC PHASER_OUT_PHY_X1Y1 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_B.ddr_byte_lane_B/phaser_out]
set_property LOC PHASER_OUT_PHY_X1Y0 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_A.ddr_byte_lane_A/phaser_out]
set_property LOC PHASER_OUT_PHY_X1Y6 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_1.u_ddr_phy_4lanes/ddr_byte_lane_C.ddr_byte_lane_C/phaser_out]
set_property LOC PHASER_OUT_PHY_X1Y5 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_1.u_ddr_phy_4lanes/ddr_byte_lane_B.ddr_byte_lane_B/phaser_out]
set_property LOC PHASER_OUT_PHY_X1Y4 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_1.u_ddr_phy_4lanes/ddr_byte_lane_A.ddr_byte_lane_A/phaser_out]
set_property LOC PHASER_OUT_PHY_X1Y11 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_D.ddr_byte_lane_D/phaser_out]
set_property LOC PHASER_OUT_PHY_X1Y10 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_C.ddr_byte_lane_C/phaser_out]
set_property LOC PHASER_OUT_PHY_X1Y9 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_B.ddr_byte_lane_B/phaser_out]
set_property LOC PHASER_OUT_PHY_X1Y8 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_A.ddr_byte_lane_A/phaser_out]

set_property LOC PHASER_IN_PHY_X1Y3 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_D.ddr_byte_lane_D/phaser_in_gen.phaser_in]
set_property LOC PHASER_IN_PHY_X1Y2 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_C.ddr_byte_lane_C/phaser_in_gen.phaser_in]
set_property LOC PHASER_IN_PHY_X1Y1 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_B.ddr_byte_lane_B/phaser_in_gen.phaser_in]
set_property LOC PHASER_IN_PHY_X1Y0 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_A.ddr_byte_lane_A/phaser_in_gen.phaser_in]
## set_property LOC PHASER_IN_PHY_X1Y6 [get_cells  -hier -filter {NAME =~ */ddr_phy_4lanes_1.u_ddr_phy_4lanes/ddr_byte_lane_C.ddr_byte_lane_C/phaser_in_gen.phaser_in}]
## set_property LOC PHASER_IN_PHY_X1Y5 [get_cells  -hier -filter {NAME =~ */ddr_phy_4lanes_1.u_ddr_phy_4lanes/ddr_byte_lane_B.ddr_byte_lane_B/phaser_in_gen.phaser_in}]
## set_property LOC PHASER_IN_PHY_X1Y4 [get_cells  -hier -filter {NAME =~ */ddr_phy_4lanes_1.u_ddr_phy_4lanes/ddr_byte_lane_A.ddr_byte_lane_A/phaser_in_gen.phaser_in}]
set_property LOC PHASER_IN_PHY_X1Y11 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_D.ddr_byte_lane_D/phaser_in_gen.phaser_in]
set_property LOC PHASER_IN_PHY_X1Y10 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_C.ddr_byte_lane_C/phaser_in_gen.phaser_in]
set_property LOC PHASER_IN_PHY_X1Y9 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_B.ddr_byte_lane_B/phaser_in_gen.phaser_in]
set_property LOC PHASER_IN_PHY_X1Y8 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_A.ddr_byte_lane_A/phaser_in_gen.phaser_in]



set_property LOC OUT_FIFO_X1Y3 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_D.ddr_byte_lane_D/out_fifo]
set_property LOC OUT_FIFO_X1Y2 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_C.ddr_byte_lane_C/out_fifo]
set_property LOC OUT_FIFO_X1Y1 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_B.ddr_byte_lane_B/out_fifo]
set_property LOC OUT_FIFO_X1Y0 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_A.ddr_byte_lane_A/out_fifo]
set_property LOC OUT_FIFO_X1Y6 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_1.u_ddr_phy_4lanes/ddr_byte_lane_C.ddr_byte_lane_C/out_fifo]
set_property LOC OUT_FIFO_X1Y5 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_1.u_ddr_phy_4lanes/ddr_byte_lane_B.ddr_byte_lane_B/out_fifo]
set_property LOC OUT_FIFO_X1Y4 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_1.u_ddr_phy_4lanes/ddr_byte_lane_A.ddr_byte_lane_A/out_fifo]
set_property LOC OUT_FIFO_X1Y11 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_D.ddr_byte_lane_D/out_fifo]
set_property LOC OUT_FIFO_X1Y10 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_C.ddr_byte_lane_C/out_fifo]
set_property LOC OUT_FIFO_X1Y9 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_B.ddr_byte_lane_B/out_fifo]
set_property LOC OUT_FIFO_X1Y8 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_A.ddr_byte_lane_A/out_fifo]

set_property LOC IN_FIFO_X1Y3 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_D.ddr_byte_lane_D/in_fifo_gen.in_fifo]
set_property LOC IN_FIFO_X1Y2 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_C.ddr_byte_lane_C/in_fifo_gen.in_fifo]
set_property LOC IN_FIFO_X1Y1 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_B.ddr_byte_lane_B/in_fifo_gen.in_fifo]
set_property LOC IN_FIFO_X1Y0 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_A.ddr_byte_lane_A/in_fifo_gen.in_fifo]
set_property LOC IN_FIFO_X1Y11 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_D.ddr_byte_lane_D/in_fifo_gen.in_fifo]
set_property LOC IN_FIFO_X1Y10 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_C.ddr_byte_lane_C/in_fifo_gen.in_fifo]
set_property LOC IN_FIFO_X1Y9 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_B.ddr_byte_lane_B/in_fifo_gen.in_fifo]
set_property LOC IN_FIFO_X1Y8 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_A.ddr_byte_lane_A/in_fifo_gen.in_fifo]

set_property LOC PHY_CONTROL_X1Y0 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/phy_control_i]
set_property LOC PHY_CONTROL_X1Y1 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_1.u_ddr_phy_4lanes/phy_control_i]
set_property LOC PHY_CONTROL_X1Y2 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/phy_control_i]


set_property LOC OLOGIC_X1Y43 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_D.ddr_byte_lane_D/ddr_byte_group_io/slave_ts.oserdes_slave_ts]
set_property LOC OLOGIC_X1Y31 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_C.ddr_byte_lane_C/ddr_byte_group_io/slave_ts.oserdes_slave_ts]
set_property LOC OLOGIC_X1Y19 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_B.ddr_byte_lane_B/ddr_byte_group_io/slave_ts.oserdes_slave_ts]
set_property LOC OLOGIC_X1Y7 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/ddr_byte_lane_A.ddr_byte_lane_A/ddr_byte_group_io/slave_ts.oserdes_slave_ts]
set_property LOC OLOGIC_X1Y143 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_D.ddr_byte_lane_D/ddr_byte_group_io/slave_ts.oserdes_slave_ts]
set_property LOC OLOGIC_X1Y131 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_C.ddr_byte_lane_C/ddr_byte_group_io/slave_ts.oserdes_slave_ts]
set_property LOC OLOGIC_X1Y119 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_B.ddr_byte_lane_B/ddr_byte_group_io/slave_ts.oserdes_slave_ts]
set_property LOC OLOGIC_X1Y107 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/ddr_byte_lane_A.ddr_byte_lane_A/ddr_byte_group_io/slave_ts.oserdes_slave_ts]

set_property LOC PLLE2_ADV_X1Y1 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_ddr3_infrastructure/plle2_i]


current_instance mb_subsystem_i/mig_7series_0
set_multicycle_path -setup -from [get_cells -hier -filter {NAME =~ */mc0/mc_read_idle_r_reg}] -to [get_cells -hier -filter {NAME =~ */input_[?].iserdes_dq_.iserdesdq}] 6

set_multicycle_path -hold -from [get_cells -hier -filter {NAME =~ */mc0/mc_read_idle_r_reg}] -to [get_cells -hier -filter {NAME =~ */input_[?].iserdes_dq_.iserdesdq}] 5

#set_multicycle_path -from [get_cells -hier -filter {NAME =~ */mc0/mc_read_idle_r*}] #                    -to   [get_cells -hier -filter {NAME =~ */input_[?].iserdes_dq_.iserdesdq}] #                    -setup 6

#set_multicycle_path -from [get_cells -hier -filter {NAME =~ */mc0/mc_read_idle_r*}] #                    -to   [get_cells -hier -filter {NAME =~ */input_[?].iserdes_dq_.iserdesdq}] #                    -hold 5

set_false_path -through [get_pins -filter {NAME =~ */DQSFOUND} -of [get_cells -hier -filter {REF_NAME == PHASER_IN_PHY}]]

set_multicycle_path -setup -start -through [get_pins -filter {NAME =~ */OSERDESRST} -of [get_cells -hier -filter {REF_NAME == PHASER_OUT_PHY}]] 2
set_multicycle_path -hold -start -through [get_pins -filter {NAME =~ */OSERDESRST} -of [get_cells -hier -filter {REF_NAME == PHASER_OUT_PHY}]] 1

set_max_delay -datapath_only -from [get_cells -hier -filter {NAME =~ *temp_mon_enabled.u_tempmon/* && IS_SEQUENTIAL}] -to [get_cells -hier -filter {NAME =~ *temp_mon_enabled.u_tempmon/device_temp_sync_r1*}] 20.000
set_max_delay -datapath_only -from [get_cells -hier *rstdiv0_sync_r1_reg*] -to [get_pins -filter {NAME =~ */RESET} -of [get_cells -hier -filter {REF_NAME == PHY_CONTROL}]] 5.000
#set_max_delay -datapath_only -from [get_cells -hier -filter {NAME =~ *temp_mon_enabled.u_tempmon/*}] -to [get_cells -hier -filter {NAME =~ *temp_mon_enabled.u_tempmon/device_temp_sync_r1*}] 20
#set_max_delay -from [get_cells -hier rstdiv0_sync_r1*] -to [get_pins -filter {NAME =~ */RESET} -of [get_cells -hier -filter {REF_NAME == PHY_CONTROL}]] -datapath_only 5

set_max_delay -datapath_only -from [get_cells -hier -filter {NAME =~ *ddr3_infrastructure/rstdiv0_sync_r1_reg*}] -to [get_cells -hier -filter {NAME =~ *temp_mon_enabled.u_tempmon/xadc_supplied_temperature.rst_r1*}] 20.000
#set_max_delay -datapath_only -from [get_cells -hier -filter {NAME =~ *ddr3_infrastructure/rstdiv0_sync_r1*}] -to [get_cells -hier -filter {NAME =~ *temp_mon_enabled.u_tempmon/*rst_r1*}] 20



####################################################################################
# Constraints from file : 'mb_subsystem_mig_7series_0_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------

current_instance -quiet
set_property BOARD_PART_PIN reset [get_ports reset]
set_property DCI_CASCADE {32 34} [get_iobanks 33]



####################################################################################
# Constraints from file : 'mb_subsystem_dlmb_v10_0.xdc'
####################################################################################

set_false_path -through [get_pins mb_subsystem_i/microblaze_0_local_memory/dlmb_v10/U0/SYS_Rst]


####################################################################################
# Constraints from file : 'mb_subsystem_ilmb_v10_1.xdc'
####################################################################################

set_false_path -through [get_pins mb_subsystem_i/microblaze_0_local_memory/ilmb_v10/U0/SYS_Rst]


####################################################################################
# Constraints from file : 'mb_subsystem_microblaze_0_axi_intc_0.xdc'
####################################################################################

# file: mb_subsystem_microblaze_0_axi_intc_0.xdc
# (c) Copyright 1984 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
current_instance mb_subsystem_i/microblaze_0_axi_intc/U0
set_false_path -to [get_cells -filter IS_SEQUENTIAL {INTC_CORE_I/*ASYNC_GEN.intr_ff*[0]}]


####################################################################################
# Constraints from file : 'mb_subsystem_mdm_1_0.xdc'
####################################################################################

# file: mb_subsystem_mdm_1_0.xdc
# (c) Copyright 2013-2014 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.

current_instance -quiet
current_instance mb_subsystem_i/mdm_1/U0
create_clock -period 33.333 [get_pins Use*.BSCAN*/DRCK]
create_clock -period 33.333 [get_pins Use*.BSCAN*/UPDATE]
set_clock_groups -asynchronous -group [get_clocks -of_objects [get_pins Use*.BSCAN*/DRCK]]
set_clock_groups -asynchronous -group [get_clocks -of_objects [get_pins Use*.BSCAN*/UPDATE]]
set_clock_groups -logically_exclusive -group [get_clocks -of_objects [get_pins Use*.BSCAN*/DRCK]] -group [get_clocks -of_objects [get_pins Use*.BSCAN*/UPDATE]]


####################################################################################
# Constraints from file : 'mb_subsystem_proc_sys_reset_1_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'mb_subsystem_proc_sys_reset_1_0.xdc'
####################################################################################


# file: mb_subsystem_proc_sys_reset_1_0.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.

current_instance -quiet
current_instance mb_subsystem_i/proc_sys_reset_1
set_false_path -to [get_pins -hier *cdc_to*/D]


####################################################################################
# Constraints from file : 'mb_subsystem_axi_timer_0_0.xdc'
####################################################################################


# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.





####################################################################################
# Constraints from file : 'mb_subsystem_axi_uartlite_0_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------

current_instance -quiet
set_property BOARD_PART_PIN rs232_uart_txd [get_ports rs232_uart_txd]
set_property PACKAGE_PIN K24 [get_ports rs232_uart_txd]
set_property IOSTANDARD LVCMOS25 [get_ports rs232_uart_txd]
set_property BOARD_PART_PIN rs232_uart_rxd [get_ports rs232_uart_rxd]
set_property PACKAGE_PIN M19 [get_ports rs232_uart_rxd]
set_property IOSTANDARD LVCMOS25 [get_ports rs232_uart_rxd]


####################################################################################
# Constraints from file : 'mb_subsystem_axi_uartlite_0_0.xdc'
####################################################################################


# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.


current_instance mb_subsystem_i/axi_uartlite_0/U0
set_false_path -to [get_pins -hier *cdc_to*/D]



####################################################################################
# Constraints from file : 'bd_0_eth_buf_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------

current_instance -quiet
set_property BOARD_PART_PIN phy_rst_out [get_ports phy_reset_out]
set_property PACKAGE_PIN L20 [get_ports phy_reset_out]
set_property IOSTANDARD LVCMOS25 [get_ports phy_reset_out]



####################################################################################
# Constraints from file : 'bd_0_eth_mac_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------

set_property BOARD_PART_PIN gmii_gtx_clk [get_ports gmii_gtx_clk]
set_property PACKAGE_PIN K30 [get_ports gmii_gtx_clk]
set_property IOSTANDARD LVCMOS25 [get_ports gmii_gtx_clk]
set_property BOARD_PART_PIN gmii_rx_clk [get_ports gmii_rx_clk]
set_property PACKAGE_PIN U27 [get_ports gmii_rx_clk]
set_property IOSTANDARD LVCMOS25 [get_ports gmii_rx_clk]
set_property BOARD_PART_PIN gmii_rx_er [get_ports gmii_rx_er]
set_property PACKAGE_PIN V26 [get_ports gmii_rx_er]
set_property IOSTANDARD LVCMOS25 [get_ports gmii_rx_er]
set_property BOARD_PART_PIN gmii_rx_dv [get_ports gmii_rx_dv]
set_property PACKAGE_PIN R28 [get_ports gmii_rx_dv]
set_property IOSTANDARD LVCMOS25 [get_ports gmii_rx_dv]
set_property BOARD_PART_PIN {gmii_rxd[0]} [get_ports {gmii_rxd[0]}]
set_property PACKAGE_PIN U30 [get_ports {gmii_rxd[0]}]
set_property IOSTANDARD LVCMOS25 [get_ports {gmii_rxd[0]}]

set_property BOARD_PART_PIN {gmii_rxd[1]} [get_ports {gmii_rxd[1]}]
set_property PACKAGE_PIN U25 [get_ports {gmii_rxd[1]}]
set_property IOSTANDARD LVCMOS25 [get_ports {gmii_rxd[1]}]

set_property BOARD_PART_PIN {gmii_rxd[2]} [get_ports {gmii_rxd[2]}]
set_property PACKAGE_PIN T25 [get_ports {gmii_rxd[2]}]
set_property IOSTANDARD LVCMOS25 [get_ports {gmii_rxd[2]}]

set_property BOARD_PART_PIN {gmii_rxd[3]} [get_ports {gmii_rxd[3]}]
set_property PACKAGE_PIN U28 [get_ports {gmii_rxd[3]}]
set_property IOSTANDARD LVCMOS25 [get_ports {gmii_rxd[3]}]

set_property BOARD_PART_PIN {gmii_rxd[4]} [get_ports {gmii_rxd[4]}]
set_property PACKAGE_PIN R19 [get_ports {gmii_rxd[4]}]
set_property IOSTANDARD LVCMOS25 [get_ports {gmii_rxd[4]}]

set_property BOARD_PART_PIN {gmii_rxd[5]} [get_ports {gmii_rxd[5]}]
set_property PACKAGE_PIN T27 [get_ports {gmii_rxd[5]}]
set_property IOSTANDARD LVCMOS25 [get_ports {gmii_rxd[5]}]

set_property BOARD_PART_PIN {gmii_rxd[6]} [get_ports {gmii_rxd[6]}]
set_property PACKAGE_PIN T26 [get_ports {gmii_rxd[6]}]
set_property IOSTANDARD LVCMOS25 [get_ports {gmii_rxd[6]}]

set_property BOARD_PART_PIN {gmii_rxd[7]} [get_ports {gmii_rxd[7]}]
set_property PACKAGE_PIN T28 [get_ports {gmii_rxd[7]}]
set_property IOSTANDARD LVCMOS25 [get_ports {gmii_rxd[7]}]

set_property BOARD_PART_PIN gmii_tx_clk [get_ports gmii_tx_clk]
set_property PACKAGE_PIN M28 [get_ports gmii_tx_clk]
set_property IOSTANDARD LVCMOS25 [get_ports gmii_tx_clk]
set_property BOARD_PART_PIN gmii_tx_en [get_ports gmii_tx_en]
set_property PACKAGE_PIN M27 [get_ports gmii_tx_en]
set_property IOSTANDARD LVCMOS25 [get_ports gmii_tx_en]
set_property BOARD_PART_PIN gmii_tx_er [get_ports gmii_tx_er]
set_property PACKAGE_PIN N29 [get_ports gmii_tx_er]
set_property IOSTANDARD LVCMOS25 [get_ports gmii_tx_er]
set_property BOARD_PART_PIN {gmii_txd[0]} [get_ports {gmii_txd[0]}]
set_property PACKAGE_PIN N27 [get_ports {gmii_txd[0]}]
set_property IOSTANDARD LVCMOS25 [get_ports {gmii_txd[0]}]

set_property BOARD_PART_PIN {gmii_txd[1]} [get_ports {gmii_txd[1]}]
set_property PACKAGE_PIN N25 [get_ports {gmii_txd[1]}]
set_property IOSTANDARD LVCMOS25 [get_ports {gmii_txd[1]}]

set_property BOARD_PART_PIN {gmii_txd[2]} [get_ports {gmii_txd[2]}]
set_property PACKAGE_PIN M29 [get_ports {gmii_txd[2]}]
set_property IOSTANDARD LVCMOS25 [get_ports {gmii_txd[2]}]

set_property BOARD_PART_PIN {gmii_txd[3]} [get_ports {gmii_txd[3]}]
set_property PACKAGE_PIN L28 [get_ports {gmii_txd[3]}]
set_property IOSTANDARD LVCMOS25 [get_ports {gmii_txd[3]}]

set_property BOARD_PART_PIN {gmii_txd[4]} [get_ports {gmii_txd[4]}]
set_property PACKAGE_PIN J26 [get_ports {gmii_txd[4]}]
set_property IOSTANDARD LVCMOS25 [get_ports {gmii_txd[4]}]

set_property BOARD_PART_PIN {gmii_txd[5]} [get_ports {gmii_txd[5]}]
set_property PACKAGE_PIN K26 [get_ports {gmii_txd[5]}]
set_property IOSTANDARD LVCMOS25 [get_ports {gmii_txd[5]}]

set_property BOARD_PART_PIN {gmii_txd[6]} [get_ports {gmii_txd[6]}]
set_property PACKAGE_PIN L30 [get_ports {gmii_txd[6]}]
set_property IOSTANDARD LVCMOS25 [get_ports {gmii_txd[6]}]

set_property BOARD_PART_PIN {gmii_txd[7]} [get_ports {gmii_txd[7]}]
set_property PACKAGE_PIN J28 [get_ports {gmii_txd[7]}]
set_property IOSTANDARD LVCMOS25 [get_ports {gmii_txd[7]}]

set_property BOARD_PART_PIN mdio_io_mdc [get_ports mdio_io_mdc]
set_property PACKAGE_PIN R23 [get_ports mdio_io_mdc]
set_property IOSTANDARD LVCMOS25 [get_ports mdio_io_mdc]
set_property BOARD_PART_PIN mdio_io [get_ports mdio_io_io]
set_property PACKAGE_PIN J21 [get_ports mdio_io_io]
set_property IOSTANDARD LVCMOS25 [get_ports mdio_io_io]


####################################################################################
# Constraints from file : 'bd_0_eth_mac_0.xdc'
####################################################################################


# PART is xc7k325tffg900-1

############################################################
# Clock Period Constraints                                 #
############################################################

############################################################
# RX Clock period Constraints (per instance)               #
############################################################
# Receiver clock period constraints: please do not relax
create_clock -period 8.000 [get_ports gmii_rx_clk]

############################################################
# MII TX Clock period Constraints (per instance)               #
############################################################
create_clock -period 8.000 [get_ports gmii_tx_clk]

#
####
#######
##########
#############
#################
#BLOCK CONSTRAINTS

############################################################
# Physical Interface Constraints
############################################################

############################################################
# External GMII Constraints                                #
############################################################

# GMII Transmitter/Receiver Constraints:  place flip-flops in IOB
current_instance mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst
set_property IOB TRUE [get_cells {tri_mode_ethernet_mac_i/gmii_interface/gmii_txd*reg[*]}]
set_property IOB TRUE [get_cells tri_mode_ethernet_mac_i/gmii_interface/gmii_tx_e*reg]
set_property IOB TRUE [get_cells tri_mode_ethernet_mac_i/gmii_interface/rx*_to_mac*reg]
set_property IOB TRUE [get_cells {tri_mode_ethernet_mac_i/gmii_interface/rx*_to_mac*reg[*]}]

############################################################
# The following are required to maximise setup/hold        #
############################################################

current_instance -quiet
set_property SLEW FAST [get_ports gmii_tx_en]
set_property SLEW FAST [get_ports gmii_tx_er]
set_property SLEW FAST [get_ports {gmii_txd[7]}]
set_property SLEW FAST [get_ports {gmii_txd[6]}]
set_property SLEW FAST [get_ports {gmii_txd[5]}]
set_property SLEW FAST [get_ports {gmii_txd[4]}]
set_property SLEW FAST [get_ports {gmii_txd[3]}]
set_property SLEW FAST [get_ports {gmii_txd[2]}]
set_property SLEW FAST [get_ports {gmii_txd[1]}]
set_property SLEW FAST [get_ports {gmii_txd[0]}]
set_property SLEW FAST [get_ports gmii_gtx_clk]


############################################################
# GMII: IODELAY Constraints
############################################################
# Please modify the value of the IDELAY_VALUE
# according to your design.
# For more information on IDELAYCTRL and IODELAY, please
# refer to the Series-7 User Guide.
# apply the same IDELAY_VALUE to all GMII RX inputs
current_instance mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst
set_property IDELAY_VALUE 30 [get_cells {tri_mode_ethernet_mac_i/gmii_interface/delay_gmii_rx* tri_mode_ethernet_mac_i/gmii_interface/rxdata_bus[*].delay_gmii_rxd}]
# Group IODELAY components
set_property IODELAY_GROUP tri_mode_ethernet_mac_iodelay_grp [get_cells {tri_mode_ethernet_mac_i/gmii_interface/delay_gmii_rx* tri_mode_ethernet_mac_i/gmii_interface/rxdata_bus[*].delay_gmii_rxd}]
current_instance -quiet
set_property IODELAY_GROUP tri_mode_ethernet_mac_iodelay_grp [get_cells mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_idelayctrl_common_i]

#
####
#######
##########
#############
#################
#CORE CONSTRAINTS



############################################################
# Crossing of Clock Domain Constraints: please do not edit #
############################################################

# control signal is synced separately so we want a max delay to ensure the signal has settled by the time the control signal has passed through the synch
current_instance mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/flow/rx_pause/pause*to_tx_reg[*]}] -to [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/flow/tx_pause/count_set*reg] 32.000
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/flow/rx_pause/pause*to_tx_reg[*]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/flow/tx_pause/pause_count*reg[*]}] 32.000
set_max_delay -datapath_only -from [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/flow/rx_pause/pause_req_to_tx_int_reg] -to [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/flow/tx_pause/sync_good_rx/data_sync_reg0] 6.000


# ignore paths from the speed control
set_false_path -from [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/speed*speed_is*100_reg] -to [get_cells tri_mode_ethernet_mac_i/clock_inst/BUFGMUX_SPEED_CLK]
set_false_path -from [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/speed*speed_is*100_reg] -to [get_cells tri_mode_ethernet_mac_i/*xspeedis10100gen/data_sync_reg0]

# set a false path for the clock path from the address filter dist rams
# the paths we care about timing are either the write interface OR the read interface
# this path is from the write to the read which should be ignored
set_false_path -from [get_cells -hierarchical -filter {NAME =~ *tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/addr_filter_top/address_filter_inst/*/DP}] -to [get_cells -hierarchical -filter {NAME =~ *tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/addr_filter_top/address_filter_inst/*addr*/bit_match*reg[*]}]

# false path due to synced control path
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/rd_data_ref_reg[*]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/ip2bus_data_reg[*]}] 6.000
set_max_delay -datapath_only -from [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/response_toggle_reg] -to [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/sync_response/data_sync_reg0] 6.000
set_max_delay -datapath_only -from [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/request_toggle_reg] -to [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/sync_request/data_sync_reg0] 6.000
# CDC from the Tx and Rx statistics to the statistic counter logic
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/vector_decode_inst/inc_vector_reg[18]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/general_statisic_control[18].general_statisics/sync_inc_vector/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/vector_decode_inst/inc_vector_reg[19]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/general_statisic_control[19].general_statisics/sync_inc_vector/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/vector_decode_inst/inc_vector_reg[20]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/general_statisic_control[20].general_statisics/sync_inc_vector/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/vector_decode_inst/inc_vector_reg[21]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/general_statisic_control[21].general_statisics/sync_inc_vector/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/vector_decode_inst/inc_vector_reg[22]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/general_statisic_control[22].general_statisics/sync_inc_vector/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/vector_decode_inst/inc_vector_reg[23]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/general_statisic_control[23].general_statisics/sync_inc_vector/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/vector_decode_inst/inc_vector_reg[24]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/general_statisic_control[24].general_statisics/sync_inc_vector/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/vector_decode_inst/inc_vector_reg[25]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/general_statisic_control[25].general_statisics/sync_inc_vector/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/vector_decode_inst/inc_vector_reg[26]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/general_statisic_control[26].general_statisics/sync_inc_vector/data_sync_reg0}] 6.000

set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/vector_decode_inst/inc_vector_reg[4]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/frame_size_bin_control1[4].frame_size_stats1/sync_inc_vector/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/vector_decode_inst/inc_vector_reg[5]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/frame_size_bin_control1[5].frame_size_stats1/sync_inc_vector/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/vector_decode_inst/inc_vector_reg[6]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/frame_size_bin_control1[6].frame_size_stats1/sync_inc_vector/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/vector_decode_inst/inc_vector_reg[7]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/frame_size_bin_control1[7].frame_size_stats1/sync_inc_vector/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/vector_decode_inst/inc_vector_reg[8]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/frame_size_bin_control1[8].frame_size_stats1/sync_inc_vector/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/vector_decode_inst/inc_vector_reg[9]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/frame_size_bin_control1[9].frame_size_stats1/sync_inc_vector/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/vector_decode_inst/inc_vector_reg[10]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/frame_size_bin_control1[10].frame_size_stats1/sync_inc_vector/data_sync_reg0}] 6.000

set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/rx_byte_counter/accumulator_gray_reg[*]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/rx_byte_counter/accum_gray_resync[*].sync_accum_gray_i/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/rx_undersized_counter/accumulator_gray_reg[*]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/rx_undersized_counter/accum_gray_resync[*].sync_accum_gray_i/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/rx_fragment_counter/accumulator_gray_reg[*]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*statistics_counters/rx_fragment_counter*/accum_gray_resync[*].sync_accum_gray_i/data_sync_reg0}] 6.000


############################################################
# Ignore paths to resync flops
############################################################
set_false_path -to [get_pins -hier -filter {NAME =~ */async_rst*/PRE}]
set_false_path -to [get_pins -hier -filter {NAME =~ */reset_sync*/PRE}]
set_max_delay -datapath_only -from [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/addr_filter_top/addr_regs.promiscuous_mode_reg_reg] -to [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/addr_filter_top/address_filter_inst/resync_promiscuous_mode/data_sync_reg0] 6.000
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/addr_filter_top/addr_regs.filter_enable_reg_reg[*]}] -to [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/addr_filter_top/address_filter_inst/address_filters[*].sync_enable/data_sync_reg0}] 6.000
set_max_delay -datapath_only -from [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*managen/conf/update_pause_ad_int_reg] -to [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/addr_filter_top/address_filter_inst/sync_update/data_sync_reg0] 6.000

# the mdio interface is clocked from the axi clock but the clock is so slow it can be considered to be data
# the data related outputs are output on the falling edge of the MDC output so both can simply be considered to be multicycle paths
set_multicycle_path -setup -from [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*managen/mdio_enabled.miim_clk_int_reg] -through [get_ports mdio_io_mdc] 10
set_multicycle_path -hold -from [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*managen/mdio_enabled.miim_clk_int_reg] -through [get_ports mdio_io_mdc] 9
set_multicycle_path -setup -from [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*managen/mdio_enabled.phy/enable_reg_reg] -through [get_ports mdio_io_mdc] 10
set_multicycle_path -hold -from [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*managen/mdio_enabled.phy/enable_reg_reg] -through [get_ports mdio_io_mdc] 9
set_multicycle_path -setup -from [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*managen/mdio_enabled.phy/mdio*reg] -through [get_ports mdio_io_io] 10
set_multicycle_path -hold -from [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*managen/mdio_enabled.phy/mdio*reg] -through [get_ports mdio_io_io] 9





####################################################################################
# Constraints from file : 'mb_subsystem_axi_ethernet_0_dma_0.xdc'
####################################################################################

# file: mb_subsystem_axi_ethernet_0_dma_0.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.


####################################################################################
# Constraints from file : 'mb_subsystem_clk_wiz_0_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'mb_subsystem_clk_wiz_0_0.xdc'
####################################################################################

# file: mb_subsystem_clk_wiz_0_0.xdc
#
# (c) Copyright 2008 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#

# Input clock periods. These duplicate the values entered for the
# input clocks. You can use these to time your system. If required
# commented constraints can be used in the top level xdc
#----------------------------------------------------------------
#create_clock -period 6.667 [get_ports clk_in1]
#set_input_jitter [get_clocks -of_objects [get_ports clk_in1]] 0.06666000000000001






####################################################################################
# Constraints from file : 'system.xdc'
####################################################################################

current_instance -quiet
set_property IOSTANDARD DIFF_SSTL15 [get_ports sys_clk_n]
set_property PACKAGE_PIN AD12 [get_ports sys_clk_p]
set_property IOSTANDARD DIFF_SSTL15 [get_ports sys_clk_p]
set_property PACKAGE_PIN AB7 [get_ports reset]
set_property IOSTANDARD LVCMOS15 [get_ports reset]
# additional constraints
#
create_clock -period 5.000 -name sys_clk_pin [get_ports sys_clk_p]
# Added for RevC board

create_pblock pblock_i
add_cells_to_pblock [get_pblocks pblock_i] [get_cells -quiet [list mb_subsystem_i]]
resize_pblock [get_pblocks pblock_i] -add {CLOCKREGION_X0Y0:CLOCKREGION_X1Y3}


####################################################################################
# Constraints generated in Vivado
####################################################################################


set_property LOC PHASER_REF_X1Y2 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_0.u_ddr_phy_4lanes/phaser_ref_i]
set_property LOC PHASER_REF_X1Y1 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_1.u_ddr_phy_4lanes/phaser_ref_i]
set_property LOC PHASER_REF_X1Y0 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_memc_ui_top_axi/mem_intfc0/ddr_phy_top0/u_ddr_mc_phy_wrapper/u_ddr_mc_phy/ddr_phy_4lanes_2.u_ddr_phy_4lanes/phaser_ref_i]
set_property LOC MMCME2_ADV_X1Y1 [get_cells mb_subsystem_i/mig_7series_0/u_mb_subsystem_mig_7series_0_0_mig/u_ddr3_infrastructure/gen_ui_extra_clocks.mmcm_i]

####################################################################################
# Constraints from file : 'mb_subsystem_microblaze_0_axi_intc_0_clocks.xdc'
####################################################################################

# file: mb_subsystem_microblaze_0_axi_intc_0_clocks.xdc
# (c) Copyright 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.


####################################################################################
# Constraints from file : 'bd_0_eth_buf_0.xdc'
####################################################################################



# Single bit CDC synchronisers to set/clear interrupt signals
# -----------------------------------------------------------

# The timing of these single bits is judged to be none critical so false_path is used instead of
# max_delay.  Interrupts will fire when the false_path signals cross the clock domain; using a
# max_delay constraint may make interrupts fire a few ns earlier, but since these are used by
# SW, a few ns makes little difference.

current_instance mb_subsystem_i/axi_ethernet_0/inst/eth_buf/U0
set_false_path -from [get_cells *TXCLCLK2AXICLK_ISR_1/ClkASignalToggle_reg] -to [get_cells *TXCLCLK2AXICLK_ISR_1/data_sync/data_sync0_i]
set_false_path -from [get_cells *TXCLCLK2AXICLK_ISR_5/ClkASignalToggle_reg] -to [get_cells *TXCLCLK2AXICLK_ISR_5/data_sync/data_sync0_i]
#set_false_path -from [get_ports {EMAC_RX_DCM_LOCKED_INT}] # May be needed in 1000BASE-X/SGMII mode or always optimised away in the system?
#set_false_path -from [get_ports {EMAC_RESET_DONE_INT}]    # Always being optimised away in the system?
set_false_path -from [get_cells *COMBINE_RESETS/PHY_RESET_CMPLTE_reg] -to [get_cells *TXCLCLK2AXICLK_ISR_8/data_sync0_i]
set_false_path -from [get_cells *RXCLCLK2AXICLK_INTRPT0/ClkASignalToggle_reg] -to [get_cells *RXCLCLK2AXICLK_INTRPT0/data_sync/data_sync0_i]
set_false_path -from [get_cells *RXCLCLK2AXICLK_INTRPT1/ClkASignalToggle_reg] -to [get_cells *RXCLCLK2AXICLK_INTRPT1/data_sync/data_sync0_i]
set_false_path -from [get_cells *RXCLCLK2AXICLK_INTRPT2/ClkASignalToggle_reg] -to [get_cells *RXCLCLK2AXICLK_INTRPT2/data_sync/data_sync0_i]

# Tx Pause value passed from AXI-Lite domain into the MAC Tx - pause_req / pause_value
# ------------------------------------------------------------------------------------

# This is very standard bus crossings methodology.  When the bus is updated (clk_a2b_bus_reg[*]) in
# its source clock domain, a single bit is toggled (ClkASignalToggle_reg); this single bit is
# passed across the clock domain and its change of state is detected in the new clock domain.  When
# this occurs, the bus, held stable on the source clock domain, can be sampled in the new clock
# domain safely.  The rules for this are:
#   * We are not concerned with how long it takes for the toggle bit to cross the clock domain so
#     it is false_path -ed
#   * However, we NEED the bus to be stable when sampled, so we need to use a max_delay on all bits
#     so we know that all bits of the bus have arrived at the destination sampling flip-flops when
#     sampled.  The minimum route delay for the toggle signal is here assumed to be 0 ns for the
#     CDC route, then we have 5 synchronisation flip-flops in the new clock domain before
#     combinatorial toggle detection is performed (requiring one further clock period).  The first
#     of these 5 sync flip-flops could be transparant (change to new logic state immediately), so we
#     have 4 clock periods remaining for the synchroniser, plus one for the toggle detection = 5
#     clock periods. So maximum route delay (worst case) can be 5 x 8 ns = 40 ns (minus the setup
#     requirement of the sampling flip-flop) for the circuit to guarantee that it will work. Here I
#     used 32 ns to provide more than enough margin (8ns) for the flip-flop setup requirement.
#
#     So all bits of clk_a2b_bus_reg[*] will be routed in < 32 ns and the circuit will be reliable.
#     Were this unconstrainted, and if the router sent just one of these bits around the FPGA and
#     its unconstrainted route was greated than approximately 40 ns, this circuit could sample an
#     incorrect value.

set_false_path -from [get_cells *TX_PAUSE_FRAME_CROSS_I/ClkASignalToggle_reg] -to [get_cells *TX_PAUSE_FRAME_CROSS_I/data_sync/data_sync0_i]
set_max_delay -datapath_only -from [get_cells {*TX_PAUSE_FRAME_CROSS_I/clk_a2b_bus_reg[*]}] -to [get_cells {*TX_PAUSE_FRAME_CROSS_I/ClkBAxiEthBaEClkCrsBusOut_reg[*]}] 8.000

# Configuration logic CDC
# -----------------------

# Standard bus crossings methodology again (see above comments for Tx Pause).  Again the control
# (toggle) signal is false-path ed, but the static bus to be sampled is max_delay constrained.  This
# is also the same calculation as above (5 clock periods max delay into the new clock domain).  Note
# that here, There are 3 different toggle control signals: all from the AXI-Lite clock domain into:
#    * TEMAC Rx clock domain (max 125MHz)
#    * TEMAC Tx clock domain (max 125MHz)
#    * AXI-S  (assumed to be max 125 MHz) - this seems to be stripped through so is commented out

set_false_path -from [get_cells *gen_sample_rx_mac_config/ClkASignalToggle_reg] -to [get_cells *gen_sample_rx_mac_config/data_sync/data_sync0_i]
set_false_path -from [get_cells *gen_sample_tx_mac_config/ClkASignalToggle_reg] -to [get_cells *gen_sample_tx_mac_config/data_sync/data_sync0_i]
#set_false_path -from [get_cells {*sample_axi_str_config/ClkASignalToggle_reg}]   -to [get_cells {*sample_axi_str_config/data_sync/data_sync0_i}]

# Adding a generic false path and a generic max delay  constraint for remaining paths
set_max_delay -datapath_only -from [get_cells -of [all_fanin -flat [get_pins -hier -regexp .*/ClkBAxiEthBClkCrsBusOut_reg.*D]] -filter {IS_SEQUENTIAL=="1" && NAME !~ "*ClkBAxiEthBClkCrsBusOut*"}] -to [get_pins -hier -regexp .*/ClkBAxiEthBClkCrsBusOut_reg.*D] 8.000

##### WARNING: [Designutils 20-1567] Use of 'set_false_path' with '-hold' is not supported by synthesis. The constraint will not be passed to synthesis.
#### set_false_path -hold -to [get_pins -hier -regexp {.*/ClkBAxiEthBClkCrsBusOut_reg.*D}]


set_false_path -to [get_pins -hier -regexp .*/data_sync0_i/D]

# Ignore paths to the asynchronous reset port of the reset synchronization module
# -------------------------------------------------------------------------------
set_false_path -to [get_pins -hier -filter {NAME =~ */async_rst*/PRE}]

# Rx data path CDC crossing
# -------------------------

# The following constraints are for gray coded busses.  Gray codes work by having only a single bit
# that changes per clock cycle: therefore all but 1 bit should be stable for sample at any time on
# the new clock domain. The single bit causes some uncertainty but only by 1 (equivalent binary
# value) - so we may sample either the very latest value, or at worst case, the previous value.

# However, we have to ensure that the route delay for all bits is < 1 clock period; if there were
# no max_delay constraints on this bus, it is possible that 1 single bit of this bus could be
# routed round the FPGA and have a routing delay > 1 clock period.  If this were the case, then
# this bit, arriving late, could coincide with the next bit changing; on the sample side, 2 bits
# could have changed at once giving 2 bits of uncertainty and the equivalent binary value is
# no-longer reliable.  Adding the max_delay constraint here to be < 1 clock period will ensure that
# this gray code crossing is reliable.

set_max_delay -datapath_only -from [get_cells {*RCV_INTFCE_I/RX_AXISTREAM_IF_I/rxs_mem_last_read_out_ptr_gray_d1_reg[*]}] -to [get_cells {*RCV_INTFCE_I/NO_INCLUDE_RX_VLAN.RX_EMAC_IF_I/SYNC_RXS_LAST_READ_GRAY_PROCESS[*].SYNC_RXS_LAST_READ_GRAY/data_sync0_i}] 8.000
set_max_delay -datapath_only -from [get_cells {*RCV_INTFCE_I/RX_AXISTREAM_IF_I/rxd_mem_last_read_out_ptr_gray_d1_reg[*]}] -to [get_cells {*RCV_INTFCE_I/NO_INCLUDE_RX_VLAN.RX_EMAC_IF_I/SYNC_RXD_LAST_READ_GRAY_PROCESS[*].SYNC_RXD_LAST_READ_GRAY/data_sync0_i}] 8.000

set_false_path -through [get_nets -hier -regexp .*speed_is_10_100.*]





####################################################################################
# Constraints from file : 'bd_0_eth_mac_0_clocks.xdc'
####################################################################################


############################################################
# RX Clock period Constraints (per instance)               #
############################################################
# Receiver clock period constraints: please do not relax

############################################################
# Obtain input clocks from top level XDC                         #
############################################################


############################################################
# Define clock relationships                               #
############################################################
current_instance -quiet
set_clock_groups -logically_exclusive -group [get_clocks -of_objects [get_pins mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/gtx_clk]] -group [get_clocks -of_objects [get_ports gmii_tx_clk]]

#
####
#######
##########
#############
#################
#BLOCK CONSTRAINTS


############################################################
# For Setup and Hold time analysis on GMII                 #
############################################################

# Identify GMII Rx Pads only.
# This prevents setup/hold analysis being performed on false inputs,
# eg, the configuration_vector inputs.

# The following constraints work in conjunction with IDELAY_VALUE settings to
# check that the GMII receive bus remains in alignment with the rising edge of
# GMII_RX_CLK.

set_input_delay -clock [get_clocks -of [get_ports gmii_rx_clk]] -max 5.200 [get_ports {gmii_rxd[7] gmii_rxd[6] gmii_rxd[5] gmii_rxd[4] gmii_rxd[3] gmii_rxd[2] gmii_rxd[1] gmii_rxd[0] gmii_rx_er gmii_rx_dv}]
set_input_delay -clock [get_clocks -of [get_ports gmii_rx_clk]] -min -add_delay 0.500 [get_ports {gmii_rxd[7] gmii_rxd[6] gmii_rxd[5] gmii_rxd[4] gmii_rxd[3] gmii_rxd[2] gmii_rxd[1] gmii_rxd[0] gmii_rx_er gmii_rx_dv}]
# Need to force the ignore inputs as these currently prevent clock propogation through the BUFGMUX
current_instance mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst
set_case_analysis 0 [get_pins tri_mode_ethernet_mac_i/clock_inst/BUFGMUX_SPEED_CLK/IGNORE*]

# create a generated clock to allow the GMII tx to be timed
create_generated_clock -name bd_0_eth_mac_0_gmii_ext_clk -source [get_pins tri_mode_ethernet_mac_i/gmii_interface/gmii_tx_clk_ddr_iob/C] -divide_by 1 -invert [get_ports gmii_gtx_clk]

# the output delays are analysed with respect to the generated clock
current_instance -quiet
set_output_delay -clock [get_clocks bd_0_eth_mac_0_gmii_ext_clk] -max 2.000 [get_ports {gmii_txd[7] gmii_txd[6] gmii_txd[5] gmii_txd[4] gmii_txd[3] gmii_txd[2] gmii_txd[1] gmii_txd[0] gmii_tx_er gmii_tx_en}]
set_output_delay -clock [get_clocks bd_0_eth_mac_0_gmii_ext_clk] -min -2.000 [get_ports {gmii_txd[7] gmii_txd[6] gmii_txd[5] gmii_txd[4] gmii_txd[3] gmii_txd[2] gmii_txd[1] gmii_txd[0] gmii_tx_er gmii_tx_en}]

# remove paths from mii_tx_clk to the new clock as we do not want to time them with these constraints
set_false_path -from [get_clocks -of_objects [get_ports gmii_tx_clk]] -to [get_clocks bd_0_eth_mac_0_gmii_ext_clk]

############################################################
# Crossing of Clock Domain Constraints: please do not edit #
############################################################


# set a false path for the IPIF
set_max_delay -datapath_only -from [get_cells {mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/axi4_lite_ipif/axi_lite_top/I_SLAVE_ATTACHMENT/bus2ip_addr_reg_reg[0] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/axi4_lite_ipif/axi_lite_top/I_SLAVE_ATTACHMENT/bus2ip_addr_reg_reg[10] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/axi4_lite_ipif/axi_lite_top/I_SLAVE_ATTACHMENT/bus2ip_addr_reg_reg[11] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/axi4_lite_ipif/axi_lite_top/I_SLAVE_ATTACHMENT/bus2ip_addr_reg_reg[1] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/axi4_lite_ipif/axi_lite_top/I_SLAVE_ATTACHMENT/bus2ip_addr_reg_reg[2] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/axi4_lite_ipif/axi_lite_top/I_SLAVE_ATTACHMENT/bus2ip_addr_reg_reg[3] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/axi4_lite_ipif/axi_lite_top/I_SLAVE_ATTACHMENT/bus2ip_addr_reg_reg[4] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/axi4_lite_ipif/axi_lite_top/I_SLAVE_ATTACHMENT/bus2ip_addr_reg_reg[5] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/axi4_lite_ipif/axi_lite_top/I_SLAVE_ATTACHMENT/bus2ip_addr_reg_reg[6] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/axi4_lite_ipif/axi_lite_top/I_SLAVE_ATTACHMENT/bus2ip_addr_reg_reg[7] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/axi4_lite_ipif/axi_lite_top/I_SLAVE_ATTACHMENT/bus2ip_addr_reg_reg[8] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/axi4_lite_ipif/axi_lite_top/I_SLAVE_ATTACHMENT/bus2ip_addr_reg_reg[9]}] -to [get_clocks -of_objects [get_pins mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/gtx_clk]] 6.000
# set a false path for the IPIF
current_instance mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst
set_max_delay -datapath_only -from [get_cells {tri_mode_ethernet_mac_i/axi4_lite_ipif/axi_lite_top/*/bus2ip_addr_reg_reg[*]}] -to [get_clocks -of_objects [get_ports gmii_tx_clk]] 6.000

# set a false path for the static config registers
current_instance -quiet
set_false_path -from [get_cells {mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_fc_en_reg[0] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_fc_en_reg[1] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_clk_divide_reg[0] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_clk_divide_reg[1] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_clk_divide_reg[2] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_clk_divide_reg[3] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_clk_divide_reg[4] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_clk_divide_reg[5] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_mdio_op_reg[0] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_mdio_op_reg[1] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_mdio_phyad_reg[0] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_mdio_phyad_reg[1] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_mdio_phyad_reg[2] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_mdio_phyad_reg[3] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_mdio_phyad_reg[4] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_mdio_regad_reg[0] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_mdio_regad_reg[1] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_mdio_regad_reg[2] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_mdio_regad_reg[3] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_mdio_regad_reg[4] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_tx_data_reg[0] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_tx_data_reg[10] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_tx_data_reg[11] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_tx_data_reg[12] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_tx_data_reg[13] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_tx_data_reg[14] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_tx_data_reg[15] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_tx_data_reg[1] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_tx_data_reg[2] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_tx_data_reg[3] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_tx_data_reg[4] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_tx_data_reg[5] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_tx_data_reg[6] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_tx_data_reg[7] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_tx_data_reg[8] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_tx_data_reg[9] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_frame_length_reg[0] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_frame_length_reg[10] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_frame_length_reg[11] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_frame_length_reg[12] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_frame_length_reg[13] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_frame_length_reg[14] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_frame_length_reg[1] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_frame_length_reg[2] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_frame_length_reg[3] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_frame_length_reg[4] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_frame_length_reg[5] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_frame_length_reg[6] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_frame_length_reg[7] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_frame_length_reg[8] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_frame_length_reg[9] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[0] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[10] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[11] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[12] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[13] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[14] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[15] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[16] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[17] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[18] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[19] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[1] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[20] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[21] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[22] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[23] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[24] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[25] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[26] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[27] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[28] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[29] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[2] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[30] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[31] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[32] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[33] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[34] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[35] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[36] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[37] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[38] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[39] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[3] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[40] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[41] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[42] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[43] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[44] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[45] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[46] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[47] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[4] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[5] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[6] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[7] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[8] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_pause_ad_reg[9] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_speed_reg[0] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_speed_reg[1] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_frame_length_reg[0] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_frame_length_reg[10] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_frame_length_reg[11] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_frame_length_reg[12] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_frame_length_reg[13] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_frame_length_reg[14] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_frame_length_reg[1] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_frame_length_reg[2] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_frame_length_reg[3] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_frame_length_reg[4] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_frame_length_reg[5] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_frame_length_reg[6] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_frame_length_reg[7] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_frame_length_reg[8] mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_frame_length_reg[9]}] -to [get_clocks -of_objects [get_pins mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/gtx_clk]]
current_instance mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst
set_false_path -from [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*managen/conf/int_*reg[*]}] -to [get_clocks -of_objects [get_ports gmii_tx_clk]]
set_false_path -from [get_cells {tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*managen/conf/int_*reg[*]}] -to [get_clocks -of [get_ports gmii_rx_clk]]
current_instance -quiet
set_false_path -from [get_cells {mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_ma_miim_enable_reg mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_crc_mode_reg mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_en_reg mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_frame_enable_reg mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_jumbo_en_reg mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_lt_disable_reg mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_ps_lt_disable_reg mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_rst_reg mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_rx_vlan_reg mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_crc_mode_wr_reg mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_en_reg mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_frame_enable_reg mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_ifg_del_en_reg mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_jumbo_en_reg mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_rst_reg mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/man_block.managen/conf/int_tx_vlan_reg}] -to [get_clocks -of_objects [get_pins mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst/gtx_clk]]
current_instance mb_subsystem_i/axi_ethernet_0/inst/eth_mac/inst
set_false_path -from [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*managen/conf/int_*reg] -to [get_clocks -of_objects [get_ports gmii_tx_clk]]
set_false_path -from [get_cells tri_mode_ethernet_mac_i/bd_0_eth_mac_0_core/*managen/conf/int_*reg] -to [get_clocks -of [get_ports gmii_rx_clk]]



####################################################################################
# Constraints from file : 'mb_subsystem_axi_ethernet_0_dma_0_clocks.xdc'
####################################################################################

# file: mb_subsystem_axi_ethernet_0_dma_0.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
# Design is synchronous. No constraints needed in this mode.



